
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Feature/ExampleTest.php ===

<?php

namespace Tests\Feature;

// use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_the_application_returns_a_successful_response(): void
    {
        $response = $this->get('/');

        $response->assertStatus(200);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Feature/ProfileTest.php ===

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ProfileTest extends TestCase
{
    use RefreshDatabase;

    public function test_profile_page_is_displayed(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->get('/profile');

        $response->assertOk();
    }

    public function test_profile_information_can_be_updated(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->patch('/profile', [
                'name' => 'Test User',
                'email' => 'test@example.com',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $user->refresh();

        $this->assertSame('Test User', $user->name);
        $this->assertSame('test@example.com', $user->email);
        $this->assertNull($user->email_verified_at);
    }

    public function test_email_verification_status_is_unchanged_when_the_email_address_is_unchanged(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->patch('/profile', [
                'name' => 'Test User',
                'email' => $user->email,
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $this->assertNotNull($user->refresh()->email_verified_at);
    }

    public function test_user_can_delete_their_account(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->delete('/profile', [
                'password' => 'password',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/');

        $this->assertGuest();
        $this->assertNull($user->fresh());
    }

    public function test_correct_password_must_be_provided_to_delete_account(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->delete('/profile', [
                'password' => 'wrong-password',
            ]);

        $response
            ->assertSessionHasErrors('password')
            ->assertRedirect('/profile');

        $this->assertNotNull($user->fresh());
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Feature/Auth/PasswordUpdateTest.php ===

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Hash;
use Tests\TestCase;

class PasswordUpdateTest extends TestCase
{
    use RefreshDatabase;

    public function test_password_can_be_updated(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->put('/password', [
                'current_password' => 'password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $this->assertTrue(Hash::check('new-password', $user->refresh()->password));
    }

    public function test_correct_password_must_be_provided_to_update_password(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->put('/password', [
                'current_password' => 'wrong-password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ]);

        $response
            ->assertSessionHasErrors('current_password')
            ->assertRedirect('/profile');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Feature/Auth/RegistrationTest.php ===

<?php

namespace Tests\Feature\Auth;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class RegistrationTest extends TestCase
{
    use RefreshDatabase;

    public function test_registration_screen_can_be_rendered(): void
    {
        $response = $this->get('/register');

        $response->assertStatus(200);
    }

    public function test_new_users_can_register(): void
    {
        $response = $this->post('/register', [
            'name' => 'Test User',
            'email' => 'test@example.com',
            'password' => 'password',
            'password_confirmation' => 'password',
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(route('dashboard', absolute: false));
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Feature/Auth/EmailVerificationTest.php ===

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\URL;
use Tests\TestCase;

class EmailVerificationTest extends TestCase
{
    use RefreshDatabase;

    public function test_email_verification_screen_can_be_rendered(): void
    {
        $user = User::factory()->unverified()->create();

        $response = $this->actingAs($user)->get('/verify-email');

        $response->assertStatus(200);
    }

    public function test_email_can_be_verified(): void
    {
        $user = User::factory()->unverified()->create();

        Event::fake();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1($user->email)]
        );

        $response = $this->actingAs($user)->get($verificationUrl);

        Event::assertDispatched(Verified::class);
        $this->assertTrue($user->fresh()->hasVerifiedEmail());
        $response->assertRedirect(route('dashboard', absolute: false).'?verified=1');
    }

    public function test_email_is_not_verified_with_invalid_hash(): void
    {
        $user = User::factory()->unverified()->create();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1('wrong-email')]
        );

        $this->actingAs($user)->get($verificationUrl);

        $this->assertFalse($user->fresh()->hasVerifiedEmail());
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Feature/Auth/PasswordResetTest.php ===

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Auth\Notifications\ResetPassword;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Notification;
use Tests\TestCase;

class PasswordResetTest extends TestCase
{
    use RefreshDatabase;

    public function test_reset_password_link_screen_can_be_rendered(): void
    {
        $response = $this->get('/forgot-password');

        $response->assertStatus(200);
    }

    public function test_reset_password_link_can_be_requested(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class);
    }

    public function test_reset_password_screen_can_be_rendered(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class, function ($notification) {
            $response = $this->get('/reset-password/'.$notification->token);

            $response->assertStatus(200);

            return true;
        });
    }

    public function test_password_can_be_reset_with_valid_token(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class, function ($notification) use ($user) {
            $response = $this->post('/reset-password', [
                'token' => $notification->token,
                'email' => $user->email,
                'password' => 'password',
                'password_confirmation' => 'password',
            ]);

            $response
                ->assertSessionHasNoErrors()
                ->assertRedirect(route('login'));

            return true;
        });
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Feature/Auth/AuthenticationTest.php ===

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class AuthenticationTest extends TestCase
{
    use RefreshDatabase;

    public function test_login_screen_can_be_rendered(): void
    {
        $response = $this->get('/login');

        $response->assertStatus(200);
    }

    public function test_users_can_authenticate_using_the_login_screen(): void
    {
        $user = User::factory()->create();

        $response = $this->post('/login', [
            'email' => $user->email,
            'password' => 'password',
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(route('dashboard', absolute: false));
    }

    public function test_users_can_not_authenticate_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $this->post('/login', [
            'email' => $user->email,
            'password' => 'wrong-password',
        ]);

        $this->assertGuest();
    }

    public function test_users_can_logout(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/logout');

        $this->assertGuest();
        $response->assertRedirect('/');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Feature/Auth/PasswordConfirmationTest.php ===

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class PasswordConfirmationTest extends TestCase
{
    use RefreshDatabase;

    public function test_confirm_password_screen_can_be_rendered(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->get('/confirm-password');

        $response->assertStatus(200);
    }

    public function test_password_can_be_confirmed(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/confirm-password', [
            'password' => 'password',
        ]);

        $response->assertRedirect();
        $response->assertSessionHasNoErrors();
    }

    public function test_password_is_not_confirmed_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/confirm-password', [
            'password' => 'wrong-password',
        ]);

        $response->assertSessionHasErrors();
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/Unit/ExampleTest.php ===

<?php

namespace Tests\Unit;

use PHPUnit\Framework\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_that_true_is_true(): void
    {
        $this->assertTrue(true);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tests/TestCase.php ===

<?php

namespace Tests;

use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    //
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/platform.php ===

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class platform extends Model
{
    use HasFactory;
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/User.php ===

<?php

namespace App\Models;

// use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class User extends Authenticatable
{
    use HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * Get the attributes that should be cast.
     *
     * @return array<string, string>
     */
    protected function casts(): array
    {
        return [
            'email_verified_at' => 'datetime',
            'password' => 'hashed',
        ];
    }
    public function role()
    {
        return $this->belongsTo(roles::class,'roles_id');
    }
    public function applications()
{
    return $this->hasMany(Application::class);
}
public function crews()
{
    return $this->belongsToMany(crews::class, 'users_crews', 'user_id', 'crews_id')
                ->withPivot('year');  // 'year' es el campo adicional que tenemos en la tabla pivote
}
}


=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/roles.php ===

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class roles extends Model
{
    use HasFactory;
    public function users()
    {
        return $this->hasMany(User::class, 'user_id');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/users_crews.php ===

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class users_crews extends Model
{
    use HasFactory;

    // Definir la tabla que usará el modelo (si el nombre no sigue la convención)
    protected $table = 'users_crews'; 

    // Definir los atributos que son asignables
    protected $fillable = ['user_id', 'crews_id', 'year'];

    // Relación inversa: un registro de 'users_crews' pertenece a un 'user'
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    // Relación inversa: un registro de 'users_crews' pertenece a una 'crew'
    public function crew()
    {
        return $this->belongsTo(crews::class);
    }
    
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/payments.php ===

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class payments extends Model
{
    use HasFactory;
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/draws.php ===

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class draws extends Model
{
    use HasFactory;
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/crews.php ===

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class crews extends Model
{
    use HasFactory;
    protected $fillable = ['name', 'capacity'];


public function applications()
{
    return $this->hasMany(Application::class);
}
    public function users()
{
    return $this->belongsToMany(User::class, 'users_crews', 'crews_id', 'user_id')
                ->withPivot('year');
}

}



=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/Application.php ===

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Application extends Model
{
    use HasFactory;
    protected $fillable = ['user_id', 'crews_id', 'status'];

    public function user()
    {
        return $this->belongsTo(User::class); 
          
    }

    public function crews()
    {
        return $this->belongsToMany(crews::class, 'users_crews', 'user_id', 'crews_id')
                    ->withPivot('year'); 
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Models/locations.php ===

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class locations extends Model
{

    use HasFactory;
    protected $fillable = ['x', 'y', 'crews_id', 'year']; // Agrega los campos que quieres permitir
public function crew()
    {
        return $this->belongsTo(crews::class);  // Crew es el modelo relacionado
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Middleware/EsAdmin.php ===

<?php

namespace App\Http\Middleware;

use App\Models\roles;
use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Route;
use Symfony\Component\HttpFoundation\Response;

use function Laravel\Prompts\table;

class EsAdmin
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle($request, Closure $next)
    {   
        $credentials = $request->validate([
            'email' => ['required', 'email'],
            'password' => ['required'],
        ]);
        if (Auth::attempt($credentials)) {
            $request->session()->regenerate();
            $user = Auth::user();
    
            // dd($user->role->isAdmin);
            if($user && $user->role && $user->role->isAdmin ){ 
                return redirect('/AdminPanel');}
            else{
            return redirect('/UserPanel');
            }
        }else{
            return back()->withErrors([
                'email' => 'The provided credentials do not match our records.',
            ])->onlyInput('email');
        }
    }
}


=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Middleware/HandleInertiaRequests.php ===

<?php

namespace App\Http\Middleware;

use Illuminate\Http\Request;
use Inertia\Middleware;

class HandleInertiaRequests extends Middleware
{
    /**
     * The root template that is loaded on the first page visit.
     *
     * @var string
     */
    protected $rootView = 'app';

    /**
     * Determine the current asset version.
     */
    public function version(Request $request): ?string
    {
        return parent::version($request);
    }

    /**
     * Define the props that are shared by default.
     *
     * @return array<string, mixed>
     */
    public function share(Request $request): array
    {
        return [
            ...parent::share($request),
            'auth' => [
                'user' => $request->user(),
            ],
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/UpdatecrewsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UpdatecrewsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/StorelocationsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StorelocationsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/StoreplatformRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StoreplatformRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/StoredrawsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StoredrawsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/UpdateplatformRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UpdateplatformRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/StorerolesRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StorerolesRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/Storeusers_crewsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class Storeusers_crewsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/UpdaterolesRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UpdaterolesRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/StorecrewsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StorecrewsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/ProfileUpdateRequest.php ===

<?php

namespace App\Http\Requests;

use App\Models\User;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class ProfileUpdateRequest extends FormRequest
{
    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    public function rules(): array
    {
        return [
            'name' => ['required', 'string', 'max:255'],
            'email' => [
                'required',
                'string',
                'lowercase',
                'email',
                'max:255',
                Rule::unique(User::class)->ignore($this->user()->id),
            ],
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/UpdatelocationsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UpdatelocationsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/UpdatepaymentsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UpdatepaymentsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/Auth/LoginRequest.php ===

<?php

namespace App\Http\Requests\Auth;

use Illuminate\Auth\Events\Lockout;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\Str;
use Illuminate\Validation\ValidationException;

class LoginRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    public function rules(): array
    {
        return [
            'email' => ['required', 'string', 'email'],
            'password' => ['required', 'string'],
        ];
    }

    /**
     * Attempt to authenticate the request's credentials.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function authenticate(): void
    {
        $this->ensureIsNotRateLimited();

        if (! Auth::attempt($this->only('email', 'password'), $this->boolean('remember'))) {
            RateLimiter::hit($this->throttleKey());

            throw ValidationException::withMessages([
                'email' => trans('auth.failed'),
            ]);
        }

        RateLimiter::clear($this->throttleKey());
    }

    /**
     * Ensure the login request is not rate limited.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function ensureIsNotRateLimited(): void
    {
        if (! RateLimiter::tooManyAttempts($this->throttleKey(), 5)) {
            return;
        }

        event(new Lockout($this));

        $seconds = RateLimiter::availableIn($this->throttleKey());

        throw ValidationException::withMessages([
            'email' => trans('auth.throttle', [
                'seconds' => $seconds,
                'minutes' => ceil($seconds / 60),
            ]),
        ]);
    }

    /**
     * Get the rate limiting throttle key for the request.
     */
    public function throttleKey(): string
    {
        return Str::transliterate(Str::lower($this->string('email')).'|'.$this->ip());
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/UpdateuserRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UpdateuserRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/Updateusers_crewsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class Updateusers_crewsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/StoreuserRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StoreuserRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/UpdatedrawsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UpdatedrawsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Requests/StorepaymentsRequest.php ===

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StorepaymentsRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Controller.php ===

<?php

namespace App\Http\Controllers;

abstract class Controller
{
    //
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/UsersCrewsController.php ===

<?php

namespace App\Http\Controllers;

use App\Http\Requests\Storeusers_crewsRequest;
use App\Http\Requests\Updateusers_crewsRequest;
use App\Models\users_crews;

class UsersCrewsController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Storeusers_crewsRequest $request)
    {
        
    }

    /**
     * Display the specified resource.
     */
    public function show(users_crews $users_crews)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(users_crews $users_crews)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Updateusers_crewsRequest $request, users_crews $users_crews)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(users_crews $users_crews)
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/PaymentsController.php ===

<?php

namespace App\Http\Controllers;

use App\Http\Requests\StorepaymentsRequest;
use App\Http\Requests\UpdatepaymentsRequest;
use App\Models\payments;

class PaymentsController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StorepaymentsRequest $request)
    {
        //
    }

    /**
     * Display the specified resource.
     */
    public function show(payments $payments)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(payments $payments)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdatepaymentsRequest $request, payments $payments)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(payments $payments)
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/UserController.php ===

<?php

namespace App\Http\Controllers;

use App\Http\Requests\StoreuserRequest;
use App\Http\Requests\UpdateuserRequest;
use App\Models\user;

class UserController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StoreuserRequest $request)
    {
        //
    }

    /**
     * Display the specified resource.
     */
    public function show(user $user)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(user $user)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdateuserRequest $request, user $user)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy($id)
    {
        $user = user::find($id);

        if (!$user) {
            return redirect()->back()->with('error', 'Usuario no encontrado.');
        }

        $user->delete();

        return redirect()->back()->with('success', 'Usuario eliminado correctamente.');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/PasswordController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules\Password;

class PasswordController extends Controller
{
    /**
     * Update the user's password.
     */
    public function update(Request $request): RedirectResponse
    {
        $validated = $request->validate([
            'current_password' => ['required', 'current_password'],
            'password' => ['required', Password::defaults(), 'confirmed'],
        ]);

        $request->user()->update([
            'password' => Hash::make($validated['password']),
        ]);

        return back();
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/VerifyEmailController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Auth\EmailVerificationRequest;
use Illuminate\Http\RedirectResponse;

class VerifyEmailController extends Controller
{
    /**
     * Mark the authenticated user's email address as verified.
     */
    public function __invoke(EmailVerificationRequest $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(route('dashboard', absolute: false).'?verified=1');
        }

        if ($request->user()->markEmailAsVerified()) {
            event(new Verified($request->user()));
        }

        return redirect()->intended(route('dashboard', absolute: false).'?verified=1');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/EmailVerificationNotificationController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;

class EmailVerificationNotificationController extends Controller
{
    /**
     * Send a new email verification notification.
     */
    public function store(Request $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(route('dashboard', absolute: false));
        }

        $request->user()->sendEmailVerificationNotification();

        return back()->with('status', 'verification-link-sent');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/RegisteredUserController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Auth\Events\Registered;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules;
use Inertia\Inertia;
use Inertia\Response;

class RegisteredUserController extends Controller
{
    /**
     * Display the registration view.
     */
    public function create(): Response
    {
        return Inertia::render('Auth/Register');
    }

    /**
     * Handle an incoming registration request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|string|lowercase|email|max:255|unique:'.User::class,
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => Hash::make($request->password),
        ]);

        event(new Registered($user));

        Auth::login($user);

        return redirect(route('dashboard', absolute: false));
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/AuthenticatedSessionController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Http\Requests\Auth\LoginRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Route;
use Inertia\Inertia;
use Inertia\Response;

class AuthenticatedSessionController extends Controller
{
    /**
     * Display the login view.
     */
    public function create(): Response
    {
        return Inertia::render('Auth/Login', [
            'canResetPassword' => Route::has('password.request'),
            'status' => session('status'),
        ]);
    }

    /**
     * Handle an incoming authentication request.
     */
    public function store(LoginRequest $request): RedirectResponse
    {
        $request->authenticate();

        $request->session()->regenerate();

        return redirect()->intended(route('dashboard', absolute: false));
    }

    /**
     * Destroy an authenticated session.
     */
    public function destroy(Request $request): RedirectResponse
    {
        Auth::guard('web')->logout();

        $request->session()->invalidate();

        $request->session()->regenerateToken();

        return redirect('/');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/NewPasswordController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Auth\Events\PasswordReset;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Password;
use Illuminate\Support\Str;
use Illuminate\Validation\Rules;
use Illuminate\Validation\ValidationException;
use Inertia\Inertia;
use Inertia\Response;

class NewPasswordController extends Controller
{
    /**
     * Display the password reset view.
     */
    public function create(Request $request): Response
    {
        return Inertia::render('Auth/ResetPassword', [
            'email' => $request->email,
            'token' => $request->route('token'),
        ]);
    }

    /**
     * Handle an incoming new password request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'token' => 'required',
            'email' => 'required|email',
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        // Here we will attempt to reset the user's password. If it is successful we
        // will update the password on an actual user model and persist it to the
        // database. Otherwise we will parse the error and return the response.
        $status = Password::reset(
            $request->only('email', 'password', 'password_confirmation', 'token'),
            function ($user) use ($request) {
                $user->forceFill([
                    'password' => Hash::make($request->password),
                    'remember_token' => Str::random(60),
                ])->save();

                event(new PasswordReset($user));
            }
        );

        // If the password was successfully reset, we will redirect the user back to
        // the application's home authenticated view. If there is an error we can
        // redirect them back to where they came from with their error message.
        if ($status == Password::PASSWORD_RESET) {
            return redirect()->route('login')->with('status', __($status));
        }

        throw ValidationException::withMessages([
            'email' => [trans($status)],
        ]);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/ConfirmablePasswordController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Validation\ValidationException;
use Inertia\Inertia;
use Inertia\Response;

class ConfirmablePasswordController extends Controller
{
    /**
     * Show the confirm password view.
     */
    public function show(): Response
    {
        return Inertia::render('Auth/ConfirmPassword');
    }

    /**
     * Confirm the user's password.
     */
    public function store(Request $request): RedirectResponse
    {
        if (! Auth::guard('web')->validate([
            'email' => $request->user()->email,
            'password' => $request->password,
        ])) {
            throw ValidationException::withMessages([
                'password' => __('auth.password'),
            ]);
        }

        $request->session()->put('auth.password_confirmed_at', time());

        return redirect()->intended(route('dashboard', absolute: false));
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/EmailVerificationPromptController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Inertia\Inertia;
use Inertia\Response;

class EmailVerificationPromptController extends Controller
{
    /**
     * Display the email verification prompt.
     */
    public function __invoke(Request $request): RedirectResponse|Response
    {
        return $request->user()->hasVerifiedEmail()
                    ? redirect()->intended(route('dashboard', absolute: false))
                    : Inertia::render('Auth/VerifyEmail', ['status' => session('status')]);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/Auth/PasswordResetLinkController.php ===

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Password;
use Illuminate\Validation\ValidationException;
use Inertia\Inertia;
use Inertia\Response;

class PasswordResetLinkController extends Controller
{
    /**
     * Display the password reset link request view.
     */
    public function create(): Response
    {
        return Inertia::render('Auth/ForgotPassword', [
            'status' => session('status'),
        ]);
    }

    /**
     * Handle an incoming password reset link request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'email' => 'required|email',
        ]);

        // We will send the password reset link to this user. Once we have attempted
        // to send the link, we will examine the response then see the message we
        // need to show to the user. Finally, we'll send out a proper response.
        $status = Password::sendResetLink(
            $request->only('email')
        );

        if ($status == Password::RESET_LINK_SENT) {
            return back()->with('status', __($status));
        }

        throw ValidationException::withMessages([
            'email' => [trans($status)],
        ]);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/PlatformController.php ===

<?php

namespace App\Http\Controllers;

use App\Http\Requests\StoreplatformRequest;
use App\Http\Requests\UpdateplatformRequest;
use App\Models\platform;

class PlatformController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StoreplatformRequest $request)
    {
        //
    }

    /**
     * Display the specified resource.
     */
    public function show(platform $platform)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(platform $platform)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdateplatformRequest $request, platform $platform)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(platform $platform)
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/RolesController.php ===

<?php

namespace App\Http\Controllers;

use App\Http\Requests\StorerolesRequest;
use App\Http\Requests\UpdaterolesRequest;
use App\Models\roles;

class RolesController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StorerolesRequest $request)
    {
        //
    }

    /**
     * Display the specified resource.
     */
    public function show(roles $roles)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(roles $roles)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdaterolesRequest $request, roles $roles)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(roles $roles)
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/DrawsController.php ===

<?php

namespace App\Http\Controllers;

use App\Models\Crew;
use App\Models\crews;
use App\Models\Location;
use App\Models\locations;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class DrawsController extends Controller
{
    const MAX_HEIGHT = 5;
    const MAX_WIDTH = 5;

    public function getData($year)
    {
        $currentYear = now()->year;
        if(is_null($year)){
            $year = $currentYear;
        }

        $crews = crews::all();
        $locations = locations::where('year', $year)->with('crew')->get();
        $showDrawButton = $locations->count() === 0;
        $isAdmin = Auth::check() && Auth::user()->role === 'admin';

        return response()->json([
            'locations' => $locations,
            'crews' => $crews,
            'showDrawButton' => $showDrawButton,
            'isAdmin' => $isAdmin
        ]);
    }

    public function draw(Request $request)
    {
        if (!Auth::check() || Auth::user()->role !== 'admin') {
            return response()->json(['success' => false, 'message' => 'No autorizado'], 403);
        }

        $year = $request->year ?? now()->year;
        $crews = crews::all()->pluck('name', 'id');

        if (count($crews) === 0) {
            return response()->json([
                'success' => false,
                'message' => 'No hay peñas disponibles para este año.'
            ], 400);
        }

        $places = [];
        foreach($crews as $crewId => $crewName){
            $isValidCoord = false;
            while(!$isValidCoord){
                $x = rand(0, (self::MAX_WIDTH-1));
                $y = rand(0, (self::MAX_HEIGHT-1));
                $coord = [$x, $y];
                $isValidCoord = $this->isValidCoord($coord, $places);
                if($isValidCoord){
                    $places[$crewId] = $coord;
                }
            }    
        }

        try {
            foreach ($places as $crewId => $coord) {
                locations::create([
                    'x' => $coord[0],
                    'y' => $coord[1],
                    'crews_id' => $crewId,
                    'year' => $year
                ]);
            }

            return response()->json(['success' => true]);
        } catch (\Exception $e) {
            return response()->json([
                'success' => false,
                'message' => 'Error al realizar el sorteo: ' . $e->getMessage()
            ], 500);
        }
    }

    public function deleteDraw(Request $request)
    {
        if (!Auth::check() || Auth::user()->role !== 'admin') {
            return response()->json(['success' => false, 'message' => 'No autorizado'], 403);
        }

        try {
            locations::where('year', date('Y'))->delete();
            return response()->json(['success' => true]);
        } catch (\Exception $e) {
            return response()->json([
                'success' => false,
                'message' => 'Error al eliminar el sorteo: ' . $e->getMessage()
            ], 500);
        }
    }

    private function isValidCoord($coord, $places)
    {
        $isValidCoord = true;
        list($x, $y) = $coord;
        if(in_array($coord, $places)){
            $isValidCoord = false;
        }
        return $isValidCoord;
    }
}
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/ApplicationController.php ===

<?php

namespace App\Http\Controllers;

use App\Models\Application;
use App\Models\crews;
use App\Models\users_crews;
use Illuminate\Container\Attributes\Log;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log as FacadesLog;

use function Illuminate\Log\log;

class ApplicationController extends Controller
{
    public function store(Request $request)
    {
        if (!Auth::check()) {
            return redirect('/');
        }

        $request->validate([
            'crews_id' => 'required|exists:crews,id',
        ]);

        $userId = Auth::id(); 

        $existingApplication = Application::where('user_id', $userId)
                                           ->where('crews_id', $request->crews_id)
                                           ->where('status', 'pending')
                                           ->first();

        if ($existingApplication) {
            return back()->with('error', 'Ya tienes una solicitud pendiente para esta peña.');
        }

        $application = Application::create([
            'user_id' => $userId,
            'crews_id' => $request->crews_id,
            'status' => 'pending',
        ]);

        return redirect()->route('applications.index')->with('success', 'Solicitud enviada con éxito.');
    }


    
    public function updateStatus($id, Request $request)
    {
        $user = Auth::user();
        $application = Application::findOrFail($id);
    
        if ($user && $user->role && !$user->role->isAdmin) {
            return redirect()->route('applications.index')->with('error', 'No tienes permisos para realizar esta acción.');
        }
    
        if ($request->status == 'accepted') {
            Users_Crews::create([
                'user_id' => $application->user_id,
                'crews_id' => $application->crews_id,
                'year' => now()->format('Y-m-d'),
            ]);
    
            $application->status = 'accepted';
            $application->save();
    
            return redirect()->route('applications.index')
                ->with('success', 'Solicitud aceptada y usuario agregado a la crew');
        } else {
            $application->status = 'denied';
            $application->save();
    
            return redirect()->route('applications.index')
                ->with('error', 'Solicitud denegada');
        }
    }
    
    



public function index()
{
 
    $applications = Application::with(['user', 'crews'])
        ->where('status', 'pending')  
        ->get();
        $crews = crews::all();

    return view('Applications', compact('applications',  'crews'));
}

public function accept(Request $request, $applicationId)
{
    $application = Application::find($applicationId);

    if (!$application) {
        return response()->json(['message' => 'Solicitud no encontrada'], 404);
    }

    if ($request->status == 'accepted') {
        users_crews::create([
            'user_id' => $application->user_id,
            'crews_id' => $application->crews_id,
            'year' => now()->year,
        ]);
    }

    $application->status = 'accepted';
    $application->save();

    return response()->json(['message' => 'Solicitud aceptada y usuario agregado a la crew']);
}





}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/ProfileController.php ===

<?php

namespace App\Http\Controllers;

use App\Http\Requests\ProfileUpdateRequest;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Redirect;
use Inertia\Inertia;
use Inertia\Response;

class ProfileController extends Controller
{
    /**
     * Display the user's profile form.
     */
    public function edit(Request $request): Response
    {
        return Inertia::render('Profile/Edit', [
            'mustVerifyEmail' => $request->user() instanceof MustVerifyEmail,
            'status' => session('status'),
        ]);
    }

    /**
     * Update the user's profile information.
     */
    public function update(ProfileUpdateRequest $request): RedirectResponse
    {
        $request->user()->fill($request->validated());

        if ($request->user()->isDirty('email')) {
            $request->user()->email_verified_at = null;
        }

        $request->user()->save();

        return Redirect::route('profile.edit');
    }

    /**
     * Delete the user's account.
     */
    public function destroy(Request $request): RedirectResponse
    {
        $request->validate([
            'password' => ['required', 'current_password'],
        ]);

        $user = $request->user();

        Auth::logout();

        $user->delete();

        $request->session()->invalidate();
        $request->session()->regenerateToken();

        return Redirect::to('/');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/CrewsController.php ===

<?php

namespace App\Http\Controllers;

use App\Http\Requests\StorecrewsRequest;
use App\Http\Requests\UpdatecrewsRequest;
use App\Models\crews;
use Illuminate\Http\Request;

class CrewsController extends Controller
{
    public function edit($id)
    {
        $crew = crews::find($id);

        if (!$crew) {
            return redirect()->back()->with('error', 'Peña no encontrada.');
        }

        return view('edit', compact('crew')); // Asegúrate de que esta vista exista
    }

    public function update(Request $request, $id)
{
    try {
        $crew = crews::findOrFail($id);
        
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'capacity' => 'required|integer|min:1'
        ]);

        $crew->update($validated);

        return response()->json([
            'success' => true,
            'message' => 'Peña actualizada correctamente'
        ]);
    } catch (\Exception $e) {
        return response()->json([
            'success' => false,
            'message' => 'Error al actualizar la peña: ' . $e->getMessage()
        ], 500);
    }
}

    public function destroy($id)
    {
        $crew = crews::find($id);

        if (!$crew) {
            return redirect()->back()->with('error', 'Peña no encontrada.');
        }

        $crew->delete();

        return redirect()->back()->with('success', 'Peña eliminada correctamente.');
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Http/Controllers/LocationsController.php ===

<?php

namespace App\Http\Controllers;

use App\Http\Requests\StorelocationsRequest;
use App\Http\Requests\UpdatelocationsRequest;
use App\Models\locations;

class LocationsController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StorelocationsRequest $request)
    {
        //
    }

    /**
     * Display the specified resource.
     */
    public function show(locations $locations)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(locations $locations)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdatelocationsRequest $request, locations $locations)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(locations $locations)
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Providers/AppServiceProvider.php ===

<?php

namespace App\Providers;

use Illuminate\Support\Facades\Vite;
use Illuminate\Support\ServiceProvider;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        Vite::prefetch(concurrency: 3);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Mail/ContactForm.php ===

<?php

namespace App\Mail;

use Illuminate\Bus\Queueable;
use Illuminate\Mail\Mailable;
use Illuminate\Queue\SerializesModels;

class ContactForm extends Mailable
{
    use Queueable, SerializesModels;

    public $data;

    public function __construct($data)
    {
        $this->data = $data;
    }

    public function build()
    {
        return $this->from('noreply@penyeslavall.com')
                    ->subject('Nueva Incidencia')
                    ->view('emails.contact-form');
    }
}
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Policies/UserPolicy.php ===

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\user;
use Illuminate\Auth\Access\Response;

class UserPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, user $model): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, user $model): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, user $model): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, user $model): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, user $model): bool
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Policies/RolesPolicy.php ===

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\roles;
use Illuminate\Auth\Access\Response;

class RolesPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, roles $roles): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, roles $roles): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, roles $roles): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, roles $roles): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, roles $roles): bool
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Policies/LocationsPolicy.php ===

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\locations;
use Illuminate\Auth\Access\Response;

class LocationsPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, locations $locations): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, locations $locations): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, locations $locations): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, locations $locations): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, locations $locations): bool
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Policies/PaymentsPolicy.php ===

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\payments;
use Illuminate\Auth\Access\Response;

class PaymentsPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, payments $payments): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, payments $payments): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, payments $payments): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, payments $payments): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, payments $payments): bool
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Policies/CrewsPolicy.php ===

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\crews;
use Illuminate\Auth\Access\Response;

class CrewsPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, crews $crews): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, crews $crews): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, crews $crews): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, crews $crews): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, crews $crews): bool
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Policies/DrawsPolicy.php ===

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\draws;
use Illuminate\Auth\Access\Response;

class DrawsPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, draws $draws): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, draws $draws): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, draws $draws): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, draws $draws): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, draws $draws): bool
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Policies/PlatformPolicy.php ===

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\platform;
use Illuminate\Auth\Access\Response;

class PlatformPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, platform $platform): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, platform $platform): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, platform $platform): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, platform $platform): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, platform $platform): bool
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/app/Policies/UsersCrewsPolicy.php ===

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\users_crews;
use Illuminate\Auth\Access\Response;

class UsersCrewsPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, users_crews $usersCrews): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, users_crews $usersCrews): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, users_crews $usersCrews): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, users_crews $usersCrews): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, users_crews $usersCrews): bool
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/DatabaseSeeder.php ===

<?php

namespace Database\Seeders;

use App\Models\roles;
use App\Models\User;
use App\Models\crews;
// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        // User::factory(10)->create();

        User::factory()->create([
            // 'name' => 'Test User',
            // 'email' => 'test@example.com',
            'id'=> 1,
            'roles_Id' => 1,
            'name' => 'Admin',
            'surname' =>'Admins',
            'email' => 'admin@admin',
            'password' => 'admin'
        ]);
        Roles::factory()->create([
            'id' => 1,
            'isAdmin' => true,
            'user_id' => 1,
            // 'date'=>'11-11-2024'
        ]);

        // crews::factory()->create([
        //     [ 
        //     'id' => 1, 
        //     'name' => 'Peña Los Amigos', 
        //     'color' => 'Rojo', 
        //     'slogan' => 'Amigos para siempre', 
        //     'capacity' => 50, 
        //     'foundation_date' => '2001-05-12', 
        // ], 
        //     [ 'id' => 2, 
        //     'name' => 'Peña Los Guerreros', 
        //     'color' => 'Azul', 
        //     'slogan' => 'Luchando juntos', 
        //     'capacity' => 75, 'foundation_date' => '1999-08-25', 
        // ], 
        //     [ 'id' => 3, 
        //     'name' => 'Peña La Unión', 
        //     'color' => 'Verde', 
        //     'slogan' => 'Unidos somos fuertes', 
        //     'capacity' => 60, 
        //     'foundation_date' => '2005-11-30', 
        // ], 
        //     [ 'id' => 4, 
        //     'name' => 'Peña Las Estrellas', 
        //     'color' => 'Amarillo', 
        //     'slogan' => 'Brillamos juntos', 
        //     'capacity' => 80, 
        //     'foundation_date' => '2000-03-18', 
        // ], 
        //     [ 'id' => 5, 
        //     'name' => 'Peña Los Valientes', 
        //     'color' => 'Naranja', 
        //     'slogan' => 'Valentía y honor', 
        //     'capacity' => 90, 
        //     'foundation_date' => '2010-06-21', 
        // ],
        // ]);

        $crews = [ 
            [ 'id' => 1, 'name' => 'Peña Los Amigos', 'color' => 'Rojo', 'slogan' => 'Amigos para siempre', 'capacity' => 50, 'foundation_date' => '2001-05-12','logo' => '/penyas/penya1.jpg' ], 
            [ 'id' => 2, 'name' => 'Peña Los Guerreros', 'color' => 'Azul', 'slogan' => 'Luchando juntos', 'capacity' => 75, 'foundation_date' => '1999-08-25','logo' => '/penyas/penya2.jpg' ], 
            [ 'id' => 3, 'name' => 'Peña La Unión', 'color' => 'Verde', 'slogan' => 'Unidos somos fuertes', 'capacity' => 60, 'foundation_date' => '2005-11-30','logo' => '/penyas/penya3.jpg' ], 
            [ 'id' => 4, 'name' => 'Peña Las Estrellas', 'color' => 'Amarillo', 'slogan' => 'Brillamos juntos', 'capacity' => 80, 'foundation_date' => '2000-03-18','logo' => '/penyas/penya4.jpg' ], 
            [ 'id' => 5, 'name' => 'Peña Los Valientes', 'color' => 'Naranja', 'slogan' => 'Valentía y honor', 'capacity' => 90, 'foundation_date' => '2010-06-21','logo' => '/penyas/penya5.jpg' ], ]; foreach ($crews as $crew) { Crews::factory()->create($crew); 
        }
        $this->call(LocationsSeeder::class);

    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/PlatformSeeder.php ===

<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class PlatformSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/PaymentsSeeder.php ===

<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class PaymentsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/UserSeeder.php ===

<?php

namespace Database\Seeders;

use App\Models\User;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class UserSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // User::table('users')->insert([
        //     'roles_Id' => '1',
        //     'name' => 'Admin',
        //     'surname' =>'Admins',
        //     'birthday_date' => '00-00-0000',
        //     'email' => 'admin@admin',
        //     'password' => 'admin'
        // ]);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/DrawsSeeder.php ===

<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DrawsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/LocationsSeeder.php ===

<?php

namespace Database\Seeders;

use App\Models\crews;
use App\Models\locations;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class LocationsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run()
    {
        $crews = crews::all(); // Obtener todas las crews existentes
        
        if ($crews->isEmpty()) {
            $this->command->info('No hay crews disponibles, asegúrate de ejecutar el seeder de Crews primero.');
            return;
        }

        $years = range(2015, 2024); // Rango de años de 2015 a 2024

        foreach ($years as $year) {
            foreach ($crews as $crew) {
                locations::create([
                    'x' => rand(0, 4),
                    'y' => rand(0, 4),
                    'crews_id' => $crew->id, // Asignar cada crew en cada año
                    'year' => $year,
                ]);
            }
        }
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/UsersCrewsSeeder.php ===

<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class UsersCrewsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        //
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/RolesSeeder.php ===

<?php

namespace Database\Seeders;

use App\Models\roles;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class RolesSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // roles::table('users')->insert([
        //     'id' => '1',
        //     'isAdmin' => 'true',
        //     'user_id' => '1',
        //     'date'=>'11-11-2024'
        // ]);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/seeders/CrewsSeeder.php ===

<?php

namespace Database\Seeders;

use App\Models\crews;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class CrewsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // crews::table('crews')->insert([
        //     [ 
        //     'id' => 1, 
        //     'name' => 'Peña Los Amigos', 
        //     'color' => 'Rojo', 
        //     'slogan' => 'Amigos para siempre', 
        //     'capacity' => 50, 
        //     'foundation_date' => '2001-05-12', 
        // ], 
        //     [ 'id' => 2, 
        //     'name' => 'Peña Los Guerreros', 
        //     'color' => 'Azul', 
        //     'slogan' => 'Luchando juntos', 
        //     'capacity' => 75, 'foundation_date' => '1999-08-25', 
        // ], 
        //     [ 'id' => 3, 
        //     'name' => 'Peña La Unión', 
        //     'color' => 'Verde', 
        //     'slogan' => 'Unidos somos fuertes', 
        //     'capacity' => 60, 
        //     'foundation_date' => '2005-11-30', 
        // ], 
        //     [ 'id' => 4, 
        //     'name' => 'Peña Las Estrellas', 
        //     'color' => 'Amarillo', 
        //     'slogan' => 'Brillamos juntos', 
        //     'capacity' => 80, 
        //     'foundation_date' => '2000-03-18', 
        // ], 
        //     [ 'id' => 5, 
        //     'name' => 'Peña Los Valientes', 
        //     'color' => 'Naranja', 
        //     'slogan' => 'Valentía y honor', 
        //     'capacity' => 90, 
        //     'foundation_date' => '2010-06-21', 
        // ]
        // ]);
    }
}




=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/factories/PaymentsFactory.php ===

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\payments>
 */
class PaymentsFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/factories/UserFactory.php ===

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'),
            'remember_token' => Str::random(10),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/factories/crewsFactory.php ===

<?php

namespace Database\Factories;

use App\Models\crews;
use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\crews>
 */
class crewsFactory extends Factory
{
    protected $model = crews::class;
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [ 
            'name' => $this->faker->company, 
            'color' => $this->faker->safeColorName, 'slogan' => $this->faker->catchPhrase, 'capacity' => $this->faker->numberBetween(30, 100), 
            'foundation_date' => $this->faker->date, 
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/factories/PlatformFactory.php ===

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\platform>
 */
class PlatformFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/factories/DrawsFactory.php ===

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\draws>
 */
class DrawsFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/factories/LocationsFactory.php ===

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\locations>
 */
class LocationsFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/factories/rolesFactory.php ===

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\roles>
 */
class RolesFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/factories/UsersCrewsFactory.php ===

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\users_crews>
 */
class UsersCrewsFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            //
        ];
    }
}

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/2024_10_22_164541_create_crews_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('crews', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('color');
            $table->string('slogan');
            $table->integer('capacity');
            $table->date('foundation_date');
            $table->string('Logo')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('crews');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/2024_10_22_165147_create_users_crews_table.php ===

<?php

use App\Models\crews;
use App\Models\User;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users_crews', function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor(User::class);
            $table->foreignIdFor(crews::class);
            $table->date('year');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users_crews');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/0001_01_01_000000_create_users_table.php ===

<?php

use App\Models\roles;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor(Roles::class)->nullable();
            $table->string('name');
            $table->string('surname');
            $table->date('birthday_date')->nullable();
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/2024_10_22_164557_create_draws_table.php ===

<?php

use App\Models\crews;
use App\Models\locations;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('draws', function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor(crews::class);
            $table->foreignIdFor(locations::class);
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('draws');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/2024_10_22_163617_create_roles_table.php ===

<?php

use App\Models\crews;
use App\Models\User;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('roles', function (Blueprint $table) {
            $table->id();
            $table->boolean('isAdmin')->default(false);
            $table->foreignIdFor(User::class);
            $table->foreignIdFor(crews::class)->nullable();
            $table->date('year')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('roles');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/2024_12_06_162402_create_applications_table.php ===

<?php

use App\Models\crews;
use App\Models\User;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('applications', function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor(User::class);
            $table->foreignIdFor(crews::class);
            $table->enum('status', ['pending', 'accepted', 'denied'])->default('pending');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('applications');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/0001_01_01_000001_create_cache_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/2024_10_22_164525_create_locations_table.php ===

<?php

use App\Models\crews;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('locations', function (Blueprint $table) {
            $table->id();
            $table->integer('x');
            $table->integer('y');
            $table->foreignIdFor(crews::class);
            $table->integer('year');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('locations');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/2024_10_22_164533_create_payments_table.php ===

<?php

use App\Models\users_crews;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('payments', function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor(users_crews::class);
            $table->integer('import');
            $table->boolean('status');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('payments');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/0001_01_01_000002_create_jobs_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/database/migrations/2024_10_22_163632_create_platforms_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('platforms', function (Blueprint $table) {
            $table->id();
            $table->string('color');
            $table->string('height');
            $table->string('width');
            $table->integer('capacity');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('platforms');
    }
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/Applications.blade.php ===

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solicitudes de Crew</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
</head>
<body>
    @include('./parts/navbar')
    <h1>Solicitudes de Crew</h1>

    @if (session('success'))
        <script>
            Swal.fire({
                icon: 'success',
                title: 'Éxito',
                text: '{{ session('success') }}',
            });
        </script>
    @elseif(session('error'))
        <script>
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: '{{ session('error') }}',
            });
        </script>
    @endif

    @if (auth()->user()->role && auth()->user()->role->isAdmin)
        <h2>Solicitudes Pendientes</h2>
        @if ($applications->isEmpty())
            <p>No hay solicitudes pendientes.</p>
        @else
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Usuario</th>
                            <th>Crew</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach ($applications as $application)
                            <tr>
                                <td>{{ $application->id }}</td>
                                <td>{{ $application->user ? $application->user->name : 'Sin usuario' }}</td>
                                <td>
                                    @foreach ($application->crews as $crew)
                                        {{ $crew->name }} 
                                    @endforeach
                                </td>
                                <td>{{ $application->status }}</td>
                                <td>
                                    @if ($application->status === 'pending')
                                        <form action="{{ route('applications.update', $application->id) }}" method="POST" style="display:inline;">
                                            @csrf
                                            @method('PATCH')
                                            <input type="hidden" name="status" value="accepted">
                                            <button type="submit" class="accept">Aceptar</button>
                                        </form>
                                        <form action="{{ route('applications.update', $application->id) }}" method="POST" style="display:inline;">
                                            @csrf
                                            @method('PATCH')
                                            <input type="hidden" name="status" value="denied">
                                            <button type="submit" class="reject">Rechazar</button>
                                        </form>
                                    @else
                                        <span class="no-available">No disponible</span>
                                    @endif
                                </td>
                            </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        @endif
    @endif
</body>
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
    }

    body {
        background-color: #0d1b2a;
        color: #e0e1dd;
        padding: 20px;
        text-align: center;
    }

    h1 {
        color: #1abc9c;
        margin-bottom: 20px;
    }

    h2 {
        color: #f4d03f;
        margin-top: 20px;
    }

    .table-container {
        overflow-x: auto;
        margin-top: 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 30px;
        background-color: #1b263b;
        border-radius: 8px;
        overflow: hidden;
    }

    th, td {
        padding: 12px;
        text-align: center;
        border: 1px solid #2c3e50;
        white-space: nowrap;
    }

    th {
        background-color: #1abc9c;
        color: white;
    }

    tr:nth-child(even) {
        background-color: #2c3e50;
    }

    .accept, .reject {
        padding: 8px 12px;
        border: none;
        border-radius: 6px;
        color: white;
        font-size: 14px;
        cursor: pointer;
        transition: opacity 0.3s;
    }

    .accept {
        background-color: #1abc9c;
    }

    .reject {
        background-color: #e74c3c;
    }

    .accept:hover, .reject:hover {
        opacity: 0.8;
    }

    .no-available {
        color: gray;
    }
</style>
</html>

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/crews.blade.php ===


<ul>
@foreach ($crews as $crew)
    <li><a href="/crews/{{$crew->id}}">{{$crew->name}}</a></li>
    <p>{{$crew->slogan}}<p>
@endforeach
</ul>
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/crew.blade.php ===

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ $crews->name }}</title>
    
</head>
<body>
    <div class="crew-info">
        @isset($crew->Logo)
            @if($crew->Logo)
                <img src="{{$crew->Logo}}" class="crew-logo">
            @endif
        @endisset

        <h1>{{ $crews->name }}</h1>
        <h2>{{ $crews->slogan }}</h2>

        <p><strong>Año de fundación:</strong> {{ $crews->foundation_date }}</p>

        <a href="/applications" class="join-button">Unirse</a>
    </div>
</body>
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
    }

    body {
        background-color: #0d1b2a;
        color: #e0e1dd;
        padding: 20px;
        text-align: center;
    }

    .crew-info {
        background-color: #1b263b;
        padding: 30px;
        margin: 20px auto;
        width: 60%;
        border-radius: 12px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
        text-align: center;
    }

    .crew-logo {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 15px;
        border: 3px solid #1abc9c;
    }

    h1 {
        color: #1abc9c;
        margin-bottom: 10px;
        font-size: 26px;
    }

    h2 {
        color: #f4d03f;
        margin-bottom: 20px;
        font-size: 20px;
    }

    .crew-info p {
        font-size: 18px;
        color: #e0e1dd;
        margin: 10px 0;
    }

    .join-button {
        display: inline-block;
        background-color: #1abc9c;
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 6px;
        text-decoration: none;
        font-size: 18px;
        transition: background-color 0.3s ease;
    }

    .join-button:hover {
        background-color: #16a085;
    }

    @media (max-width: 768px) {
        .crew-info {
            width: 80%;
            padding: 20px;
        }
    }
</style>
</html>
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/welcome.blade.php ===

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

    
    </head>
    @php
    $user = Auth::user();
@endphp
    <body>
        @include('./parts/navbar')

    <div class="carousel">
        <div class="carousel-inner">
            <div class="carousel-item">
                <img src="{{ asset('Imagenes/img-1.jpg') }}" alt="Peña 1">
            </div>
            <div class="carousel-item">
                <img src="{{ asset('Imagenes/img-2.jpg') }}" alt="Peña 2">
            </div>
            <div class="carousel-item">
                <img src="{{ asset('Imagenes/img-3.jpeg') }}" alt="Peña 3">
            </div>
            <div class="carousel-item">
                <img src="{{ asset('Imagenes/img-4.jpg') }}" alt="Peña 4">
            </div>
            <div class="carousel-item">
                <img src="{{ asset('Imagenes/img-5.jpeg') }}" alt="Peña 5">
            </div>
            <div class="carousel-item">
                <img src="{{ asset('Imagenes/img-6.jpeg') }}" alt="Peña 6">
            </div>
        </div>
        <div class="carousel-controls">
            <button class="prev">&lt;</button>
            <button class="next">&gt;</button>
        </div>
        <div class="carousel-indicators"></div>
    </div>



        <div class="main-content">
            <h1>Bienvenidos a las Peñas en la Vall</h1>
            <p>Las peñas de la Vall son grupos de amigos y entusiastas que se reúnen para compartir momentos de diversión, cultura y tradición. Cada peña tiene su propia identidad, pero todas comparten el mismo objetivo: disfrutar y vivir la experiencia en comunidad.</p>

            <h2>Conoce algunas de nuestras peñas</h2>
            
            <div class="peñas-list">
                <div class="peña">
                    <h3>Peña Los Amigos</h3>
                    <p>Una peña formada por amigos de toda la vida, comprometidos con la tradición y siempre listos para disfrutar de las fiestas de la Vall.</p>
                </div>
                <div class="peña">
                    <h3>Peña La Diversión</h3>
                    <p>Una peña joven con muchas ganas de pasarlo bien, organizar eventos y ser parte de la comunidad.</p>
                </div>
                <div class="peña">
                    <h3>Peña El Rincón</h3>
                    <p>Un grupo que busca siempre dar lo mejor en cada evento, desde las fiestas hasta las actividades culturales.</p>
                </div>
            </div>
        </div>




        <div style="width: 100%"><iframe width="100%" height="600" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.com/maps?width=100%25&amp;height=600&amp;hl=en&amp;q=vall%20de%20uxo+(My%20Business%20Name)&amp;t=&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed"><a href="https://www.gps.ie/collections/drones/">best drones</a></iframe></div>
    
        @include('./parts/footer')
    
    
    </body>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const carousel = document.querySelector('.carousel-inner');
            const items = document.querySelectorAll('.carousel-item');
            const prevBtn = document.querySelector('.prev');
            const nextBtn = document.querySelector('.next');
            let currentIndex = 0;
    
            function updateCarousel() {
                carousel.style.transform = `translateX(-${currentIndex * 100}%)`;
            }
    
            prevBtn.addEventListener('click', () => {
                currentIndex = (currentIndex - 1 + items.length) % items.length;
                updateCarousel();
            });
    
            nextBtn.addEventListener('click', () => {
                currentIndex = (currentIndex + 1) % items.length;
                updateCarousel();
            });
    

            setInterval(() => {
                currentIndex = (currentIndex + 1) % items.length;
                updateCarousel();
            }, 5000);
        });
    </script>



    <style>
        * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    background-color: #1a1a1a;
    color: #fff;
    padding: 20px;
    line-height: 1.6;
}

h1 {
    text-align: center;
    color: #4CAF50;
    margin-bottom: 30px;
    font-size: 2.5rem;
    text-transform: uppercase;
    letter-spacing: 2px;
}

h2 {
    color: #4CAF50;
    margin: 40px 0 20px;
    font-size: 2rem;
    text-align: center;
    position: relative;
}

.main-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
}

.main-content p {
    color: #ccc;
    font-size: 1.1rem;
    text-align: center;
    margin-bottom: 2rem;
}

.section {
    margin: 40px 0;
    background-color: #222;
    border-radius: 12px;
    padding: 30px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

.peñas-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    gap: 30px;
    margin-top: 3rem;
}

.peña {
    background-color: #222;
    padding: 25px;
    border-radius: 12px;
    width: 30%;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid #333;
}

.peña:hover {
    transform: translateY(-10px);
    box-shadow: 0 6px 20px rgba(76, 175, 80, 0.2);
    border-color: #4CAF50;
}

.peña h3 {
    font-size: 1.5rem;
    color: #4CAF50;
    margin: 15px 0;
    text-transform: uppercase;
}

.peña p {
    font-size: 1rem;
    color: #ccc;
    line-height: 1.6;
}

.carousel {
    position: relative;
    width: 100%;
    max-width: 1000px;
    margin: 40px auto;
    overflow: hidden;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    border: 1px solid #333;
}

.carousel-inner {
    display: flex;
    transition: transform 0.5s ease-in-out;
    height: 500px;
}

.carousel-item {
    min-width: 100%;
    flex-shrink: 0;
}

.carousel-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: brightness(0.8);
}

.carousel-controls button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(76, 175, 80, 0.8);
    color: white;
    border: none;
    padding: 15px 20px;
    cursor: pointer;
    font-size: 24px;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 10;
}

.carousel-controls .prev {
    left: 20px;
}

.carousel-controls .next {
    right: 20px;
}

.carousel-controls button:hover {
    background: rgba(76, 175, 80, 1);
    transform: translateY(-50%) scale(1.1);
}

.carousel-indicators {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
    z-index: 10;
}

.indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.indicator.active {
    background: #4CAF50;
}

.mapouter {
    margin: 40px auto;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    border: 1px solid #333;
}

.gmap_canvas {
    width: 100%;
    max-width: 1000px;
    margin: 0 auto;
}

.gmap_canvas iframe {
    width: 100%;
    height: 500px;
}

@media (max-width: 768px) {
    .peñas-list {
        flex-direction: column;
        align-items: center;
    }

    .peña {
        width: 90%;
    }

    .carousel-item img {
        height: 300px;
    }
}
        
    </style>
</html>

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/draw.blade.php ===

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>Sorteo</title>
    @viteReactRefresh
    @vite(['resources/js/app.jsx', 'resources/css/app.css'])
</head>
<body>
    <div id="app"> </div>
</body>
</html>
<style>
</style>




{{-- <!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sorteo</title>
    
</head>
<body>
    @include('./parts/navbar')
    <h2>Sorteo de Ubicación</h2>


    <div class="year-selector">
        <label for="year" class="year-label">Seleccionar Año:</label>
        <select id="year" class="year-select" onchange="location = this.value;">
            @for ($i = 2015; $i <= 2025; $i++)
                <option value="/draw/{{ $i }}" {{ $year == $i ? 'selected' : '' }}>{{ $i }}</option>
            @endfor
        </select>
    </div>


    @if (auth()->user()->role && auth()->user()->role->isAdmin)
        <form action="{{ route('draw.draw') }}" method="POST">
            @csrf
            <button type="submit" class="btn-draw" {{ $showDrawButton ? '' : 'disabled' }}>Realizar Sorteo</button>
        </form>
        <form action="/deletedraw" id="deleteForm" method="POST">
            @csrf
            <button type="submit"  class="btn-draw" {{ !$showDrawButton ? '' : 'disabled' }}>Eliminar Sorteo actual</button>
        </form>

    @endif


    <div class="board">
        @for ($y = 0; $y < 5; $y++)
            @for ($x = 0; $x < 5; $x++)
                <div class="cell">
                    @foreach ($locations as $location)
                        @if ($location->x == $x && $location->y == $y)
                            @foreach ($crews as $crew)
                                @if ($location->crews_id == $crew->id)
                                    <span>{{ $crew->name }}</span>
                                @endif
                            @endforeach
                        @endif
                    @endforeach
                </div>
            @endfor
        @endfor
    </div>

    @include('./parts/footer')
</body>
</html>
<script>
    function borrar(e){
        e.preventDefault(); // Prevenir envío automático del formulario
        
        Swal.fire({
            title: "¿Quieres borrar el sorteo?",
            text: "No podrás revertir esta acción",
            icon: "warning",
            showConfirmButton: true,
            showCancelButton: true,
            confirmButtonText: "Si",
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire("Se ha eliminado el sorteo", "", "success").then(() => {
                    document.getElementById('deleteForm').submit();
                });
            } 
        });
    }

    document.getElementById('deleteForm').addEventListener('submit', borrar);

</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<style>
    /* Estilos generales */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
    }
    
    body {
        background-color: #0d1b2a;
        color: #e0e1dd;
        text-align: center;
        padding: 20px;
    }
    
    h2 {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 20px;
        color: #f8f9fa;
        text-shadow: 2px 2px 8px rgba(255, 255, 255, 0.2);
    }

    /* Tablero de celdas */
    .board {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: 14px;
        max-width: 500px;
        margin: 20px auto;
        background-color: #1b263b;
        border-radius: 16px;
        padding: 15px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
    }

    .cell {
        width: 80px;
        height: 80px;
        background-color: #2c3e50;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 12px;
        font-size: 1.2rem;
        font-weight: bold;
        color: #ecf0f1;
        transition: transform 0.3s ease, background-color 0.3s ease;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
    }

    .cell:hover {
        background-color: #34495e;
        transform: scale(1.2);
    }

    /* Botón de sorteo */
    .btn-draw {
        background-color: #1abc9c;
        color: white;
        padding: 20px 50px;
        border: none;
        border-radius: 12px;
        font-size: 1.6rem;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.2s;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
    }

    .btn-draw:hover {
        background-color: #16a085;
        transform: scale(1.1);
    }

    .btn-draw:disabled {
        background-color: #95a5a6;
        cursor: not-allowed;
    }

    /* Selector de año */
    .year-selector {
        margin: 20px auto;
        text-align: center;
    }

    .year-select {
        padding: 12px;
        font-size: 1.4rem;
        border-radius: 8px;
        border: 2px solid #ccc;
        cursor: pointer;
        background-color: #1b263b;
        color: white;
        transition: all 0.3s ease;
    }

    .year-select:hover {
        border-color: #1abc9c;
    }
</style> --}}
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/Panels/AdminPanel.blade.php ===

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="csrf-token" content="{{ csrf_token() }}">

    <title>Admin Panel</title>
    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    @include('./parts/navbar')
    <div class="admin-panel">
        <h1>Back Office</h1>
    
        <div class="admin-box">
            <h2>Opciones del Administrador</h2>
    
            <div class="options-container">
                <div class="secondary-option" id="create-user-option">
                    <h3>Crear Usuario</h3>
                </div>
                <div class="secondary-option" id="create-crew-option">
                    <h3>Crear Crew</h3>
                </div>
                <a href="/applications" class="secondary-option">
                    <h3>Ver Solicitudes</h3>
                </a>
                <a href="/draw" class="secondary-option">Ir a Sorteos</a>
            </div>
        </div>
        <div id="create-user-form" class="form-container" style="display:none;">
            <h3>Formulario de Registro</h3>
            @include('./Auth/other-register')
        </div>

        <div id="create-crew-form" class="form-container" style="display:none;">
            <h3>Formulario de Crear Crew</h3>
            @include('./Auth/Create_crew')
        </div>
    </div>

        <div class="table-container">
            <h3>Usuarios</h3>
            <table>
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Apellidos</th>
                        <th>Correo Electrónico</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach ($users as $user)
                    <tr>
                        <td>{{ $user->name }}</td>
                        <td>{{ $user->surname }}</td>
                        <td>{{ $user->email }}</td>
                        <td>
                            <form action="{{ route('users.destroy', $user->id) }}" method="POST" style="display:inline;">
                                @csrf
                                @method('DELETE')
                                <button type="submit" class="btn-delete">Eliminar Usuario</button>
                            </form>
                        </td>
                    </tr>
                    @endforeach
                </tbody>
            </table>
        </div>
    
        <div class="table-container">
            <h3>Peñas</h3>
            <table>
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Capacidad</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach ($crews as $crew)
                    <tr>
                        <td>{{ $crew->name }}</td>
                        <td>{{ $crew->capacity }}</td>
                        <td>
                            <button onclick="editCrew({{ $crew->id }}, '{{ $crew->name }}', {{ $crew->capacity }})" class="btn-edit">
                                Editar Peña
                            </button>
                            <form action="{{ route('crews.destroy', $crew->id) }}" method="POST" style="display:inline;">
                                @csrf
                                @method('DELETE')
                                <button type="submit" class="btn-delete">Eliminar Peña</button>
                            </form>
                        </td>
                    </tr>
                    @endforeach
                </tbody>
            </table>
        </div>
    </div>
@if (session('success'))
    <script>
        Swal.fire({
            icon: 'success',
            title: 'Éxito',
            text: '{{ session('success') }}',
        });
    </script>
@endif

@if (session('error'))
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: '{{ session('error') }}',
        });
    </script>
@endif

</body>
<script>
document.getElementById('create-user-option').onclick = function() {
        var userForm = document.getElementById('create-user-form');
        userForm.style.display = userForm.style.display === 'none' || userForm.style.display === '' ? 'block' : 'none';
    };

document.getElementById('create-crew-option').onclick = function() {
        var crewForm = document.getElementById('create-crew-form');
        crewForm.style.display = crewForm.style.display === 'none' || crewForm.style.display === '' ? 'block' : 'none';
    };



function editCrew(crewId, crewName, crewCapacity) {
        Swal.fire({
            title: 'Editar Peña',
            html: `
                <form id="editCrewForm">
                    <div class="swal2-input-group">
                        <label for="name">Nombre de la Peña:</label>
                        <input type="text" id="name" class="swal2-input" value="${crewName}" required>
                    </div>
                    <div class="swal2-input-group">
                        <label for="capacity">Capacidad:</label>
                        <input type="number" id="capacity" class="swal2-input" value="${crewCapacity}" required>
                    </div>
                </form>
            `,
            showCancelButton: true,
            confirmButtonText: 'Actualizar',
            cancelButtonText: 'Cancelar',
            preConfirm: () => {
                const name = document.getElementById('name').value;
                const capacity = document.getElementById('capacity').value;

                return fetch(`/crews/${crewId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                    },
                    body: JSON.stringify({
                        _method: 'PATCH',
                        name: name,
                        capacity: capacity
                    })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error al actualizar la peña');
                    }
                    return response.json();
                })
                .catch(error => {
                    Swal.showValidationMessage(error.message);
                });
            }
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    icon: 'success',
                    title: '¡Actualizado!',
                    text: 'La peña ha sido actualizada correctamente',
                    timer: 1500
                }).then(() => {
                    window.location.reload();
                });
            }
        });
    }


document.getElementById('create-user-option').onclick = function() {
    Swal.fire({
        title: 'Crear Usuario',
        html: `
            <form id="registerForm" class="register-form">
                <div class="swal2-input-group">
                    <input type="text" id="name" class="swal2-input" placeholder="Nombre" required>
                </div>
                <div class="swal2-input-group">
                    <input type="text" id="surname" class="swal2-input" placeholder="Apellidos" required>
                </div>
                <div class="swal2-input-group">
                    <input type="date" id="birth_date" class="swal2-input" required>
                </div>
                <div class="swal2-input-group">
                    <input type="email" id="email" class="swal2-input" placeholder="Email" required>
                </div>
                <div class="swal2-input-group">
                    <input type="password" id="password" class="swal2-input" placeholder="Contraseña" required>
                </div>
            </form>
        `,
        showCancelButton: true,
        confirmButtonText: 'Crear Usuario',
        cancelButtonText: 'Cancelar',
        preConfirm: () => {
            const formData = {
                name: document.getElementById('name').value,
                surname: document.getElementById('surname').value,
                birth_date: document.getElementById('birth_date').value,
                email: document.getElementById('email').value,
                password: document.getElementById('password').value
            };

            return fetch('/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                },
                body: JSON.stringify(formData)
            })
            .then(response => {
                if (!response.ok) {
                    return response.text().then(text => {
                        throw new Error(text || 'Error en la respuesta del servidor');
                    });
                }
                return Promise.resolve();
            })
            .catch(error => {
                Swal.showValidationMessage(`Error: ${error.message}`);
                throw error;
            });
        }
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
                icon: 'success',
                title: '¡Usuario Creado!',
                text: 'El usuario ha sido creado correctamente',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                window.location.reload();
            });
        }
    }).catch(() => {
        // Error already handled in preConfirm
    });
};
document.getElementById('create-crew-option').onclick = function() {
    Swal.fire({
        title: 'Crear Peña',
        html: `
            <form id="createCrewForm" class="register-form">
                <div class="swal2-input-group">
                    <input type="text" id="name" class="swal2-input" placeholder="Nombre de la Peña" required>
                </div>
                <div class="swal2-input-group">
                    <input type="text" id="color" class="swal2-input" placeholder="Color" required>
                </div>
                <div class="swal2-input-group">
                    <input type="text" id="slogan" class="swal2-input" placeholder="Slogan" required>
                </div>
                <div class="swal2-input-group">
                    <input type="number" id="capacity" class="swal2-input" placeholder="Capacidad" required>
                </div>
                <div class="swal2-input-group">
                    <input type="date" id="foundation_date" class="swal2-input" required>
                </div>
            </form>
        `,
        showCancelButton: true,
        confirmButtonText: 'Crear Peña',
        cancelButtonText: 'Cancelar',
        preConfirm: () => {
            const formData = {
                name: document.getElementById('name').value,
                color: document.getElementById('color').value,
                slogan: document.getElementById('slogan').value,
                capacity: document.getElementById('capacity').value,
                foundation_date: document.getElementById('foundation_date').value
            };

            return fetch('/createcrew', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                },
                body: JSON.stringify(formData)
            })
            .then(response => {
                if (!response.ok) {
                    return response.text().then(text => {
                        throw new Error(text || 'Error al crear la peña');
                    });
                }
                return Promise.resolve();
            })
            .catch(error => {
                Swal.showValidationMessage(`Error: ${error.message}`);
                throw error;
            });
        }
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
                icon: 'success',
                title: '¡Peña Creada!',
                text: 'La peña ha sido creada correctamente',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                window.location.reload();
            });
        }
    }).catch(() => {
      
    });
};



</script>


<style>
    .swal2-popup {
    background-color: #1b263b !important;
    color: #e0e1dd !important;
    border-radius: 12px !important;
}

.swal2-title {
    color: #1abc9c !important;
    font-size: 24px !important;
    margin-bottom: 20px !important;
}

.register-form {
    padding: 20px;
    max-width: 500px;
    margin: 0 auto;
}

.swal2-input-group {
    margin-bottom: 20px !important;
    text-align: left;
}

.swal2-input-group label {
    display: block;
    margin-bottom: 8px;
    color: #1abc9c;
    font-weight: 500;
}

.swal2-input {
    width: 100% !important;
    padding: 12px !important;
    background-color: #2c3e50 !important;
    border: 1px solid #34495e !important;
    color: #e0e1dd !important;
    border-radius: 8px !important;
    font-size: 16px !important;
    transition: all 0.3s ease !important;
}

.swal2-input:focus {
    border-color: #1abc9c !important;
    box-shadow: 0 0 0 2px rgba(26, 188, 156, 0.2) !important;
    outline: none !important;
}

.swal2-input::placeholder {
    color: #95a5a6 !important;
}

/* Button styles */
.swal2-confirm {
    background: #1abc9c !important;
    color: white !important;
    padding: 12px 24px !important;
    border-radius: 8px !important;
    font-weight: bold !important;
    transition: all 0.3s ease !important;
}

.swal2-cancel {
    background: #e74c3c !important;
    color: white !important;
    padding: 12px 24px !important;
    border-radius: 8px !important;
    font-weight: bold !important;
    transition: all 0.3s ease !important;
}

.swal2-confirm:hover {
    background: #16a085 !important;
    transform: translateY(-2px) !important;
}

.swal2-cancel:hover {
    background: #c0392b !important;
    transform: translateY(-2px) !important;
}

/* Date input specific styles */
input[type="date"].swal2-input {
    color: #e0e1dd !important;
    padding: 10px 12px !important;
}

/* Number input specific styles */
input[type="number"].swal2-input {
    padding: 10px 12px !important;
}

/* Success popup styles */
.swal2-success-circular-line-left,
.swal2-success-circular-line-right,
.swal2-success-fix {
    background-color: #1b263b !important;
}

.swal2-icon.swal2-success .swal2-success-ring {
    border-color: #1abc9c !important;
}

.swal2-icon.swal2-success [class^='swal2-success-line'] {
    background-color: #1abc9c !important;
}

/* Error popup styles */
.swal2-icon.swal2-error [class^='swal2-x-mark-line'] {
    background-color: #e74c3c !important;
}

/* Validation message styles */
.swal2-validation-message {
    background: #c0392b !important;
    color: white !important;
    border-radius: 6px !important;
    margin-top: 15px !important;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}

body {
    background-color: #0d1b2a;
    color: #e0e1dd;
    padding: 20px;
}

.admin-panel {
    max-width: 1100px;
    margin: 0 auto;
    background-color: #1b263b;
    border-radius: 12px;
    padding: 25px;
    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.4);
}


.admin-panel h1 {
    text-align: center;
    color: #1abc9c;
    margin-bottom: 25px;
    font-size: 28px;
}

.admin-box {
    border: 2px solid #1abc9c;
    border-radius: 10px;
    padding: 20px;
    background-color: #2c3e50;
    margin-bottom: 20px;
}

.options-container {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    gap: 15px;
}

.secondary-option {
    flex: 1;
    text-align: center;
    padding: 15px;
    background-color: #1abc9c;
    color: white;
    border-radius: 8px;
    cursor: pointer;
    font-size: 18px;
    font-weight: bold;
    transition: all 0.3s ease;
    text-decoration: none;
}

.secondary-option:hover {
    background-color: #16a085;
    transform: scale(1.05);
}

.table-container {
    margin-top: 30px;
    background-color: #1b263b;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
    overflow-x: auto;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

th, td {
    padding: 14px;
    text-align: left;
    border-bottom: 1px solid #34495e;
}

th {
    background-color: #1abc9c;
    color: white;
    text-align: center;
}

tr:hover {
    background-color: #2c3e50;
}

.btn-delete, .btn-edit {
    padding: 10px 14px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    font-weight: bold;
    transition: opacity 0.3s, transform 0.2s;
    text-align: center;
    display: inline-block;
}

.btn-delete {
    background-color: #e74c3c;
    color: white;
}

.btn-edit {
    background-color: #f4d03f;
    color: black;
}

.btn-delete:hover, .btn-edit:hover {
    opacity: 0.85;
    transform: scale(1.05);
}

@media (max-width: 768px) {
    .admin-panel {
        padding: 15px;
    }

    .options-container {
        flex-direction: column;
    }

    .secondary-option {
        width: 100%;
    }

    table {
        font-size: 14px;
    }
}

</style>
</html>
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/Panels/userPanel.blade.php ===

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Front Office - Panel de Usuario</title>
<style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: #0d1b2a;
            color: #e0e1dd;
            padding: 20px;
            text-align: center;
            overflow-x: hidden;
        }

        .navbar {
            background-color: #1abc9c;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
            margin-bottom: 30px;
        }

        .panel-content {
            background-color: #1b263b;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
            width: 50%;
            margin: 0 auto;
        }

        .panel-content .button {
            display: inline-block;
            padding: 10px 20px;
            margin: 10px;
            text-decoration: none;
            font-weight: bold;
            color: white;
            background-color: #1abc9c;
            border-radius: 8px;
            transition: background 0.3s ease;
        }

        .panel-content .delete {
            background-color: #e74c3c;
        }

        .panel-content .button:hover {
            background-color: #16a085;
        }

        .sidebar-toggle {
            position: fixed;
            left: 20px;
            top: 20px;
            background: #1abc9c;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
            z-index: 10;
        }

        .sidebar {
            position: fixed;
            left: -300px;
            top: 0;
            width: 250px;
            height: 100%;
            background: #1b263b;
            padding: 20px;
            box-shadow: 4px 0px 10px rgba(0, 0, 0, 0.3);
            transition: left 0.3s ease;
            z-index: 20;
        }

        .sidebar.active {
            left: 0;
        }

        .sidebar h2 {
            color: #1abc9c;
            margin-bottom: 15px;
        }

        .sidebar p {
            margin-bottom: 10px;
        }

        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 15;
        }

        .overlay.active {
            display: block;
        }

        .crews-section {
            margin-top: 30px;
            width: 80%;
            padding: 20px;
            background-color: #1b263b;
            border-radius: 12px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
            margin: 20px auto;
        }

        .crews-section h2 {
            color: #1abc9c;
            margin-bottom: 15px;
        }

        .crews-section ul {
            list-style: none;
            padding-left: 0;
        }

        .crews-section ul li {
            padding: 12px;
            margin: 10px 0;
            background-color: #2c3e50;
            border-radius: 8px;
            transition: background-color 0.3s ease;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
        }

        .crews-section ul li:hover {
            background-color: #f4d03f;
            color: #0d1b2a;
        }
        .join-button {
            background-color: #1abc9c;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 8px;
            cursor: pointer;
            text-decoration: none;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }

        .join-button:hover {
            background-color: #16a085;
        }
</style>

</head>
<body>
    @include('./parts/navbar')

    <button class="sidebar-toggle" onclick="toggleSidebar()">&#9776;</button>
    <div class="overlay" id="overlay" onclick="closeSidebar()"></div>
    <div class="sidebar" id="sidebar">
        <h2>Datos del Usuario</h2>
        <p><strong>Nombre:</strong> {{ Auth::user()->name }}</p>
        <p><strong>Apellidos:</strong> {{ Auth::user()->surname }}</p>
        <p><strong>Correo:</strong> {{ Auth::user()->email }}</p>
        <p><strong>Fecha de Nacimiento:</strong> {{ Auth::user()->birthday_date }}</p>
    </div>

    <div class="container">
        <div class="panel-content">
            <h1>Front Office</h1>
            <div class="options">
                <a href="/draw" class="button">Ir a Sorteos</a>
                <a href="/deleteacc" class="button delete">Borrar cuenta</a>
            </div>
        </div>

        <div class="crews-section">
            <h2>Peñas Disponibles</h2>
            <ul>
                @foreach ($crews as $crew)
                    <li>
                        <span>{{ $crew->name }}</span>
                        <a href="{{ url('/crews/' . $crew->id) }}" class="join-button">Ver más</a>
                    </li>
                @endforeach
            </ul>
        </div>
    </div>

    @include('./parts/footer')

    <script>
        function toggleSidebar() {
            document.getElementById('sidebar').classList.toggle('active');
            document.getElementById('overlay').classList.toggle('active');
        }

        function closeSidebar() {
            document.getElementById('sidebar').classList.remove('active');
            document.getElementById('overlay').classList.remove('active');
        }
    </script>
</body>
</html>

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/app.blade.php ===

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title inertia>{{ config('app.name', 'Laravel') }}</title>

        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />


        @routes
        @viteReactRefresh
        @vite(['resources/js/app.jsx', "resources/js/Pages/{$page['component']}.jsx"])
        @inertiaHead
    </head>
    <body class="font-sans antialiased">
        @inertia
    </body>
</html>

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/Auth/Create_crew.blade.php ===

<body>
    <div>
        <h1>Create Crew</h1>
        <form action="/createcrew" method="POST">
            @csrf
            <input type="text" name="name" class="input-field" placeholder="Name" required>
            <input type="text" name="color" class="input-field" placeholder="Color" required>
            <input type="text" name="slogan" class="input-field" placeholder="Slogan" required>
            <input type="text" name="capacity" class="input-field" placeholder="Capacity" required>
            <input type="date" name="foundation_date" class="input-field" placeholder="Foundation date">
            <input type="submit" class="submit-btn" value="Register">
        </form>
    </div>
</body>

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/Auth/register.blade.php ===

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Registro</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
    background-image: url('{{ asset('Imagenes/img-2.jpg') }}');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    padding: 20px;
    position: relative;
}

body::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(13, 27, 42, 0.7);
    z-index: 1;
}


.register-container {
    position: relative;
    z-index: 2;
    background-color: rgba(27, 38, 59, 0.9);
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
    width: 100%;
    max-width: 400px;
    text-align: center;
    color: #e0e1dd;
    backdrop-filter: blur(10px);
}

        h1 {
            color: #1abc9c;
            margin-bottom: 20px;
            font-size: 24px;
        }

        .input-field {
            width: 100%;
            padding: 12px;
            margin-bottom: 15px;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            background: #2c3e50;
            color: #e0e1dd;
            transition: all 0.3s ease;
        }

        .input-field:focus {
            background: #34495e;
            outline: none;
        }

        .submit-btn {
            width: 100%;
            padding: 12px;
            background-color: #1abc9c;
            border: none;
            color: white;
            font-size: 18px;
            font-weight: bold;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .submit-btn:hover {
            background-color: #16a085;
        }

        .form-footer {
            margin-top: 15px;
        }

        .form-footer a {
            text-decoration: none;
            color: #1abc9c;
            font-weight: bold;
        }

        .form-footer a:hover {
            text-decoration: underline;
        }

        @media (max-width: 768px) {
            .register-container {
                width: 90%;
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="register-container">
        <h1>Registro</h1>
        <form action="/register" method="POST">
            @csrf
            <input type="text" name="name" class="input-field" placeholder="Nombre" required>
            <input type="text" name="surname" class="input-field" placeholder="Apellidos" required>
            <input type="date" name="birth_date" class="input-field" required>
            <input type="email" name="email" class="input-field" placeholder="Correo Electrónico" required>
            <input type="password" name="password" class="input-field" placeholder="Contraseña" required>
            <input type="submit" class="submit-btn" value="Registrarse">
        </form>
        <div class="form-footer">
            <p>¿Ya tienes cuenta? <a href="/login">Inicia sesión aquí</a></p>
        </div>
    </div>
</body>
</html>

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/Auth/login.blade.php ===

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Iniciar Sesión</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
    background-image: url('{{ asset('Imagenes/img-1.jpg') }}');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    padding: 20px;
    position: relative;
}


body::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(13, 27, 42, 0.7);
    z-index: 1;
}

.login-container {
    position: relative;
    z-index: 2;
    background-color: rgba(27, 38, 59, 0.9);
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
    width: 100%;
    max-width: 400px;
    text-align: center;
    color: #e0e1dd;
    backdrop-filter: blur(10px);
}

        h1 {
            color: #1abc9c;
            margin-bottom: 20px;
            font-size: 24px;
        }

        .input-field {
            width: 100%;
            padding: 12px;
            margin-bottom: 15px;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            background: #2c3e50;
            color: #e0e1dd;
            transition: all 0.3s ease;
        }

        .input-field:focus {
            background: #34495e;
            outline: none;
        }

        .submit-btn {
            width: 100%;
            padding: 12px;
            background-color: #1abc9c;
            border: none;
            color: white;
            font-size: 18px;
            font-weight: bold;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .submit-btn:hover {
            background-color: #16a085;
        }

        .form-footer {
            margin-top: 15px;
        }

        .form-footer a {
            text-decoration: none;
            color: #1abc9c;
            font-weight: bold;
        }

        .form-footer a:hover {
            text-decoration: underline;
        }

        @media (max-width: 768px) {
            .login-container {
                width: 90%;
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h1>Iniciar Sesión</h1>
        <form action="/verifyAuth" method="POST">
            @csrf
            <input type="email" name="email" class="input-field" placeholder="Correo Electrónico" required>
            <input type="password" name="password" class="input-field" placeholder="Contraseña" required>
            <input type="submit" class="submit-btn" value="Iniciar Sesión">
        </form>
        <div class="form-footer">
            <p>¿No tienes cuenta? <a href="/register">Regístrate aquí</a></p>
        </div>
    </div>
</body>
</html>

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/Auth/other-register.blade.php ===

<body>
    <div class="register-container">
        <h1>Register</h1>
        <form action="/register" method="POST">
            @csrf
            <input type="text" name="name" class="input-field" placeholder="First Name" required>
            <input type="text" name="surname" class="input-field" placeholder="Last Name" required>
            <input type="date" name="birth_date" class="input-field" required>
            <input type="email" name="email" class="input-field" placeholder="Email" required>
            <input type="password" name="password" class="input-field" placeholder="Password" required>
            <input type="submit" class="submit-btn" value="Register">
        </form>
    </div>
</body>
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/emails/contact-form.blade.php ===

<!DOCTYPE html>
<html>
<head>
    <title>Nueva Incidencia</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .header {
            background-color: #1abc9c;
            color: white;
            padding: 20px;
            text-align: center;
            border-radius: 8px 8px 0 0;
        }
        .content {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 0 0 8px 8px;
        }
        .field {
            margin-bottom: 15px;
        }
        .field strong {
            color: #1abc9c;
        }
    </style>
</head>
<body>
    <div class="header">
        <h2>Nueva Incidencia de Contacto</h2>
    </div>
    <div class="content">
        <div class="field">
            <strong>Nombre:</strong>
            <p>{{ $data['name'] }}</p>
        </div>
        <div class="field">
            <strong>Email:</strong>
            <p>{{ $data['email'] }}</p>
        </div>
        <div class="field">
            <strong>Descripción:</strong>
            <p>{{ $data['description'] }}</p>
        </div>
    </div>
</body>
</html>
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/parts/footer.blade.php ===

<meta name="csrf-token" content="{{ csrf_token() }}">


<footer class="footer">
    <div class="footer-content">
        <div class="footer-brand">
            <h3>Penyes La Vall</h3>
        </div>
        <div class="footer-contact">
            <p>¿Necesitas ayuda?</p>
            <button onclick="showContactForm()" class="contact-btn">Contáctanos</button>
        </div>
        <div class="footer-copyright">
            <p>&copy; {{ date('Y') }} Penyes La Vall. Todos los derechos reservados.</p>
        </div>
    </div>
</footer>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
function showContactForm() {
    Swal.fire({
        title: 'Formulario de Contacto',
        html: `
            <form id="contactForm" class="contact-form">
                <div class="swal2-input-group">
                    <input type="text" id="name" class="swal2-input" placeholder="Nombre" required>
                </div>
                <div class="swal2-input-group">
                    <input type="email" id="email" class="swal2-input" placeholder="Email" required>
                </div>
                <div class="swal2-input-group">
                    <textarea id="description" class="swal2-textarea" placeholder="Describe tu problema" required></textarea>
                </div>
            </form>
        `,
        showCancelButton: true,
        confirmButtonText: 'Enviar',
        cancelButtonText: 'Cancelar',
        preConfirm: () => {
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const description = document.getElementById('description').value;

            if (!name || !email || !description) {
                Swal.showValidationMessage('Por favor, rellena todos los campos');
                return false;
            }

            return fetch('/contact', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                },
                body: JSON.stringify({ name, email, description })
            })
            .then(response => response.json())
            .then(data => {
                if (!data.success) {
                    throw new Error(data.message || 'Error al enviar el mensaje');
                }
                return data;
            })
            .catch(error => {
                Swal.showValidationMessage(error.message);
                throw error;
            });
        },
        buttonsStyling: true,
        showLoaderOnConfirm: true,
        allowOutsideClick: () => !Swal.isLoading()
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
                icon: 'success',
                title: '¡Enviado!',
                text: 'Tu mensaje ha sido enviado correctamente',
                showConfirmButton: false,
                timer: 1500
            });
        }
    });
}
 
</script>


<style>
    .contact-btn {
        background-color: #1abc9c;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 6px;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

    .contact-btn:hover {
        background-color: #16a085;
    }

    /* SweetAlert Custom Styles */
    .swal2-popup {
    background-color: #1b263b !important;
    color: #e0e1dd !important;
    border-radius: 12px !important;
}

.swal2-title {
    color: #1abc9c !important;
    font-size: 24px !important;
    margin-bottom: 20px !important;
}

.contact-form {
    padding: 20px;
    max-width: 500px;
    margin: 0 auto;
}

.swal2-input-group {
    margin-bottom: 20px !important;
    text-align: left;
}

.swal2-input, .swal2-textarea {
    width: 100% !important;
    padding: 12px !important;
    background-color: #2c3e50 !important;
    border: 1px solid #34495e !important;
    color: #e0e1dd !important;
    border-radius: 8px !important;
    font-size: 16px !important;
    transition: all 0.3s ease !important;
}

.swal2-input:focus, .swal2-textarea:focus {
    border-color: #1abc9c !important;
    box-shadow: 0 0 0 2px rgba(26, 188, 156, 0.2) !important;
    outline: none !important;
}

.swal2-textarea {
    min-height: 150px !important;
    resize: vertical !important;
}

.swal2-confirm, .swal2-cancel {
    padding: 12px 24px !important;
    font-size: 16px !important;
    border-radius: 8px !important;
    font-weight: bold !important;
}

.swal2-confirm {
    background-color: #1abc9c !important;
}

.swal2-cancel {
    background-color: #e74c3c !important;
}

    .contact-form {
        text-align: left;
        margin-top: 20px;
    }

    .swal2-input-group {
        margin-bottom: 15px;
    }


    .footer {
        background-color: #222;
        color: #fff;
        padding: 2rem 0;
        margin-top: 3rem;
    }

    .footer-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
        text-align: center;
    }

    .footer-brand h3 {
        font-size: 1.8rem;
        margin-bottom: 1rem;
        color: #4CAF50;
    }

    .footer-contact {
        margin: 1rem 0;
    }

    .footer-contact a {
        color: #4CAF50;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .footer-contact a:hover {
        color: #66bb6a;
    }

    .footer-copyright {
        margin-top: 1.5rem;
        font-size: 0.9rem;
        color: #888;
    }
</style>
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/views/parts/navbar.blade.php ===

        @php
            $user = Auth::user();
        @endphp
        <nav class="navbar">
    <div class="navbar-brand">
        <a href="/" class="logo">Penyes La Vall</a>
    </div>
    <ul class="nav-links">
        <li><a href="/">Inicio</a></li>
        @auth
            @if($user && $user->role && $user->role->isAdmin)
                <li><a href="/AdminPanel">Panel Admin</a></li>
            @else
                <li><a href="/UserPanel">Mi Panel</a></li>
            @endif
            <li><a href="/logout">Cerrar Sesión</a></li>
        @else
            <li><a href="/login">Iniciar Sesión</a></li>
            <li><a href="/register">Registro</a></li>
        @endauth


        
    </ul>
</nav>

<style>
.navbar {
    background-color: #222;
    padding: 15px 30px;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    border: 1px solid #333;
    margin: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.navbar-brand {
    flex-shrink: 0;
}

.navbar-brand .logo {
    color: #4CAF50;
    font-size: 1.5rem;
    font-weight: bold;
    text-decoration: none;
    letter-spacing: 1px;
}

.nav-links {
    list-style: none;
    display: flex;
    align-items: center;
    gap: 30px;
    margin: 0;
    padding: 0;
}

.nav-links li {
    margin: 0;
}

.nav-links li a {
    text-decoration: none;
    color: #ccc;
    font-size: 1.1rem;
    font-weight: 500;
    transition: all 0.3s ease;
    padding: 8px 16px;
    border-radius: 8px;
    border: 1px solid transparent;
}

.nav-links li a:hover {
    color: #4CAF50;
    background-color: rgba(76, 175, 80, 0.1);
    border-color: #4CAF50;
    transform: translateY(-2px);
}

/* Responsive Design */
@media (max-width: 768px) {
    .navbar {
        flex-direction: column;
        padding: 15px;
        gap: 15px;
        margin: 10px;
    }

    .nav-links {
        flex-direction: column;
        width: 100%;
        gap: 10px;
    }

    .nav-links li a {
        display: block;
        text-align: center;
        padding: 12px 24px;
    }
}
</style>



=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/css/welcome.css ===

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    background-color: #1a1a1a;
    color: #fff;
    padding: 20px;
    line-height: 1.6;
}

h1 {
    text-align: center;
    color: #4CAF50;
    margin-bottom: 30px;
    font-size: 2.5rem;
    text-transform: uppercase;
    letter-spacing: 2px;
}

h2 {
    color: #4CAF50;
    margin: 40px 0 20px;
    font-size: 2rem;
    text-align: center;
    position: relative;
}

.main-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
}

.main-content p {
    color: #ccc;
    font-size: 1.1rem;
    text-align: center;
    margin-bottom: 2rem;
}

.section {
    margin: 40px 0;
    background-color: #222;
    border-radius: 12px;
    padding: 30px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

.peñas-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    gap: 30px;
    margin-top: 3rem;
}

.peña {
    background-color: #222;
    padding: 25px;
    border-radius: 12px;
    width: 30%;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid #333;
}

.peña:hover {
    transform: translateY(-10px);
    box-shadow: 0 6px 20px rgba(76, 175, 80, 0.2);
    border-color: #4CAF50;
}

.peña h3 {
    font-size: 1.5rem;
    color: #4CAF50;
    margin: 15px 0;
    text-transform: uppercase;
}

.peña p {
    font-size: 1rem;
    color: #ccc;
    line-height: 1.6;
}

.carousel {
    position: relative;
    width: 100%;
    max-width: 1000px;
    margin: 40px auto;
    overflow: hidden;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    border: 1px solid #333;
}

.carousel-inner {
    display: flex;
    transition: transform 0.5s ease-in-out;
    height: 500px;
}

.carousel-item {
    min-width: 100%;
    flex-shrink: 0;
}

.carousel-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: brightness(0.8);
}

.carousel-controls button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(76, 175, 80, 0.8);
    color: white;
    border: none;
    padding: 15px 20px;
    cursor: pointer;
    font-size: 24px;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 10;
}

.carousel-controls .prev {
    left: 20px;
}

.carousel-controls .next {
    right: 20px;
}

.carousel-controls button:hover {
    background: rgba(76, 175, 80, 1);
    transform: translateY(-50%) scale(1.1);
}

.carousel-indicators {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
    z-index: 10;
}

.indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.indicator.active {
    background: #4CAF50;
}

.mapouter {
    margin: 40px auto;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    border: 1px solid #333;
}

.gmap_canvas {
    width: 100%;
    max-width: 1000px;
    margin: 0 auto;
}

.gmap_canvas iframe {
    width: 100%;
    height: 500px;
}

@media (max-width: 768px) {
    .peñas-list {
        flex-direction: column;
        align-items: center;
    }

    .peña {
        width: 90%;
    }

    .carousel-item img {
        height: 300px;
    }
}
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/css/app.css ===

@tailwind base;
@tailwind components;
@tailwind utilities;

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/css/draw.css ===

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}

body {
    background-color: #0d1b2a;
    color: #e0e1dd;
    text-align: center;
    padding: 20px;
}

h2 {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 20px;
    color: #f8f9fa;
    text-shadow: 2px 2px 8px rgba(255, 255, 255, 0.2);
}

/* Tablero de celdas */
.board {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 14px;
    max-width: 500px;
    margin: 20px auto;
    background-color: #1b263b;
    border-radius: 16px;
    padding: 15px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
}

.cell {
    width: 80px;
    height: 80px;
    background-color: #2c3e50;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
    font-size: 1.2rem;
    font-weight: bold;
    color: #ecf0f1;
    transition: transform 0.3s ease, background-color 0.3s ease;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
}

.cell:hover {
    background-color: #34495e;
    transform: scale(1.2);
}

/* Botón de sorteo */
.btn-draw {
    background-color: #1abc9c;
    color: white;
    padding: 20px 50px;
    border: none;
    border-radius: 12px;
    font-size: 1.6rem;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.2s;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
}

.btn-draw:hover {
    background-color: #16a085;
    transform: scale(1.1);
}

.btn-draw:disabled {
    background-color: #95a5a6;
    cursor: not-allowed;
}

/* Selector de año */
.year-selector {
    margin: 20px auto;
    text-align: center;
}

.year-select {
    padding: 12px;
    font-size: 1.4rem;
    border-radius: 8px;
    border: 2px solid #ccc;
    cursor: pointer;
    background-color: #1b263b;
    color: white;
    transition: all 0.3s ease;
}

.year-select:hover {
    border-color: #1abc9c;
}
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/resources/js/bootstrap.js ===

import axios from 'axios';
window.axios = axios;

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/postcss.config.js ===

export default {
    plugins: {
        tailwindcss: {},
        autoprefixer: {},
    },
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/tailwind.config.js ===

import defaultTheme from 'tailwindcss/defaultTheme';
import forms from '@tailwindcss/forms';

/** @type {import('tailwindcss').Config} */
export default {
    content: [
        './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',
        './storage/framework/views/*.php',
        './resources/views/**/*.blade.php',
        './resources/js/**/*.jsx',
    ],

    theme: {
        extend: {
            fontFamily: {
                sans: ['Figtree', ...defaultTheme.fontFamily.sans],
            },
        },
    },

    plugins: [forms],
};

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/routes/web.php ===

<?php

use App\Http\Controllers\DrawsController;
use App\Http\Controllers\ApplicationController;
use App\Http\Controllers\CrewsController;
use App\Http\Controllers\UserController;
use App\Http\Middleware\EsAdmin;
use App\Mail\ContactForm;
use App\Models\Application;
use App\Models\crews;
use App\Models\roles;
use App\Models\User;
use App\Models\users_crews;
use Database\Seeders\CrewsSeeder;
use Illuminate\Auth\Events\Login;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Route;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Mail;

// use Inertia\Inertia;

Route::get('/', function () {
    return view('welcome');
});

Route::get('/login', function(){
    return view('./Auth/login');
});

Route::post('/verifyAuth', function(Request $request){
    
})->middleware(EsAdmin::class);

Route::get('/logout', function(){
    Auth::logout();
    return redirect('/');
});

Route::get('/deleteacc', function(){
    $id = optional(Auth::user())->id;
    DB::delete("DELETE FROM users WHERE id='$id'");
    DB::delete("DELETE FROM roles WHERE user_id='$id'");

    return redirect('/');
});

Route::get('/register', function(){
    Return view('./Auth/register');
});


Route::get('/crews', function(){
    return view('crews')
    ->with('crews', crews::all());
});

Route::get('/crews/{id}', function($id){
    $crew = crews::findOrFail($id);
    return view('crew')->with('crews', $crew); 
});

Route::middleware('auth')->group(function() {
    Route::get('/applications', [ApplicationController::class, 'index'])->name('applications.index');
    Route::patch('/applications/{id}', [ApplicationController::class, 'updateStatus'])->name('applications.update');
    Route::post('/applications', [ApplicationController::class, 'store'])->name('applications.store');
});


Route::post('/deletedraw', function(){
    DB::delete("DELETE FROM locations WHERE year=2025");
    return redirect('/draw');
});

Route::get('/UserPanel', function(){
    return view('./Panels/userPanel')
    ->with('crews', crews::all());
});

Route::get('/AdminPanel', function () {
    $users = User::with('crews')->get();
    $crews = crews::all();

    return view('./Panels/AdminPanel', compact('users', 'crews'));
});

Route::post('/register', function(Request $request) {
    try {
        $user = new User();
        $role = new roles();
        
        $user->name = $request->input('name');
        $user->surname = $request->input('surname');
        $user->email = $request->input('email');
        $user->birthday_date = $request->input('birth_date');
        $user->password = Hash::make($request->input('password'));
        $user->roles_id = $role->id;
        
        $user->save();
        
        $role->isAdmin = false; // Set false by default for new users
        $role->user_id = $user->id;
        $role->save();

        if ($request->ajax()) {
            return response()->json([
                'success' => true,
                'message' => 'Usuario creado correctamente'
            ]);
        }

        return redirect('/')->with('success', 'Usuario creado correctamente');
    } catch (\Exception $e) {
        if ($request->ajax()) {
            return response()->json([
                'success' => false,
                'message' => 'Error al crear el usuario: ' . $e->getMessage()
            ], 500);
        }
        
        return back()->with('error', 'Error al crear el usuario');
    }
});

Route::post('/createcrew', function(Request $request){
    $crew = new crews();

    $crew->name= $request->input('name');
    $crew->color= $request->input('color');
    $crew->slogan= $request->input('slogan');
    $crew->capacity= $request->input('capacity');
    $crew->foundation_date = $request->input('foundation_date');
    
    $crew->save();

    return redirect('/AdminPanel');
});

Route::delete('/users/{id}', [UserController::class, 'destroy'])->name('users.destroy');
Route::get('/crews/{id}/edit', [CrewsController::class, 'edit'])->name('crews.edit'); // Ruta para editar
Route::patch('/crews/{id}', [CrewsController::class, 'update'])->name('crews.update');
Route::delete('/crews/{id}', [CrewsController::class, 'destroy'])->name('crews.destroy'); // Ruta para eliminar


// Route::get('/draw/{year?}', [DrawsController::class, 'show'])->name('draw.show');
// Route::post('/draw', [DrawsController::class, 'draw'])->name('draw.draw');

Route::get('/draw', function () {
    return view('draw');
})->middleware('auth');



Route::post('/contact', function (Request $request) {
    try {
        Mail::to('admin@example.com')->send(new ContactForm($request->all()));
        
        return response()->json([
            'success' => true,
            'message' => 'Mensaje enviado correctamente'
        ]);
    } catch (\Exception $e) {
        return response()->json([
            'success' => false,
            'message' => 'Error al enviar el mensaje: ' . $e->getMessage()
        ], 500);
    }
});


// Route::get('/pruebas', function(){
    
// }

// Route::get('/dashboard', function () {
    // return Inertia::render('Dashboard');
// })->middleware(['auth', 'verified'])->name('dashboard');

// Route::middleware('auth')->group(function () {
//     Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
//     Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
//     Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');
// });



=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/routes/api.php ===

<?php

use App\Http\Controllers\DrawsController;
use Illuminate\Support\Facades\Route;

Route::middleware('auth')->group(function () {
    Route::get('/draw/{year}', [DrawsController::class, 'getData']);
    Route::post('/draw', [DrawsController::class, 'draw']);
    Route::post('/deletedraw', [DrawsController::class, 'deleteDraw']);
});
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/routes/auth.php ===

<?php

use App\Http\Controllers\Auth\AuthenticatedSessionController;
use App\Http\Controllers\Auth\ConfirmablePasswordController;
use App\Http\Controllers\Auth\EmailVerificationNotificationController;
use App\Http\Controllers\Auth\EmailVerificationPromptController;
use App\Http\Controllers\Auth\NewPasswordController;
use App\Http\Controllers\Auth\PasswordController;
use App\Http\Controllers\Auth\PasswordResetLinkController;
use App\Http\Controllers\Auth\RegisteredUserController;
use App\Http\Controllers\Auth\VerifyEmailController;
use Illuminate\Support\Facades\Route;

Route::middleware('guest')->group(function () {
    Route::get('register', [RegisteredUserController::class, 'create'])
        ->name('register');

    Route::post('register', [RegisteredUserController::class, 'store']);

    

    Route::post('login', [AuthenticatedSessionController::class, 'store']);

    Route::get('forgot-password', [PasswordResetLinkController::class, 'create'])
        ->name('password.request');

    Route::post('forgot-password', [PasswordResetLinkController::class, 'store'])
        ->name('password.email');

    Route::get('reset-password/{token}', [NewPasswordController::class, 'create'])
        ->name('password.reset');

    Route::post('reset-password', [NewPasswordController::class, 'store'])
        ->name('password.store');
});

Route::middleware('auth')->group(function () {
    Route::get('verify-email', EmailVerificationPromptController::class)
        ->name('verification.notice');

    Route::get('verify-email/{id}/{hash}', VerifyEmailController::class)
        ->middleware(['signed', 'throttle:6,1'])
        ->name('verification.verify');

    Route::post('email/verification-notification', [EmailVerificationNotificationController::class, 'store'])
        ->middleware('throttle:6,1')
        ->name('verification.send');

    Route::get('confirm-password', [ConfirmablePasswordController::class, 'show'])
        ->name('password.confirm');

    Route::post('confirm-password', [ConfirmablePasswordController::class, 'store']);

    Route::put('password', [PasswordController::class, 'update'])->name('password.update');

    Route::post('logout', [AuthenticatedSessionController::class, 'destroy'])
        ->name('logout');
});

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/routes/console.php ===

<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote')->hourly();

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/public/index.php ===

<?php

use Illuminate\Http\Request;

define('LARAVEL_START', microtime(true));

// Determine if the application is in maintenance mode...
if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
    require $maintenance;
}

// Register the Composer autoloader...
require __DIR__.'/../vendor/autoload.php';

// Bootstrap Laravel and handle the request...
(require_once __DIR__.'/../bootstrap/app.php')
    ->handleRequest(Request::capture());

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/session.php ===

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    |
    | This option determines the default session driver that is utilized for
    | incoming requests. Laravel supports a variety of storage options to
    | persist session data. Database storage is a great default choice.
    |
    | Supported: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    |
    | Here you may specify the number of minutes that you wish the session
    | to be allowed to remain idle before it expires. If you want them
    | to expire immediately when the browser is closed then you may
    | indicate that via the expire_on_close configuration option.
    |
    */

    'lifetime' => env('SESSION_LIFETIME', 120),

    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),

    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    |
    | This option allows you to easily specify that all of your session data
    | should be encrypted before it's stored. All encryption is performed
    | automatically by Laravel and you may use the session like normal.
    |
    */

    'encrypt' => env('SESSION_ENCRYPT', false),

    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    |
    | When utilizing the "file" session driver, the session files are placed
    | on disk. The default storage location is defined here; however, you
    | are free to provide another location where they should be stored.
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    |
    | When using the "database" or "redis" session drivers, you may specify a
    | connection that should be used to manage these sessions. This should
    | correspond to a connection in your database configuration options.
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    |
    | When using the "database" session driver, you may specify the table to
    | be used to store sessions. Of course, a sensible default is defined
    | for you; however, you're welcome to change this to another table.
    |
    */

    'table' => env('SESSION_TABLE', 'sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    |
    | When using one of the framework's cache driven session backends, you may
    | define the cache store which should be used to store the session data
    | between requests. This must match one of your defined cache stores.
    |
    | Affects: "apc", "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | Some session drivers must manually sweep their storage location to get
    | rid of old sessions from storage. Here are the chances that it will
    | happen on a given request. By default, the odds are 2 out of 100.
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    |
    | Here you may change the name of the session cookie that is created by
    | the framework. Typically, you should not need to change this value
    | since doing so does not grant a meaningful security improvement.
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    |
    | The session cookie path determines the path for which the cookie will
    | be regarded as available. Typically, this will be the root path of
    | your application, but you're free to change this when necessary.
    |
    */

    'path' => env('SESSION_PATH', '/'),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    |
    | This value determines the domain and subdomains the session cookie is
    | available to. By default, the cookie will be available to the root
    | domain and all subdomains. Typically, this shouldn't be changed.
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | By setting this option to true, session cookies will only be sent back
    | to the server if the browser has a HTTPS connection. This will keep
    | the cookie from being sent to you when it can't be done securely.
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will prevent JavaScript from accessing the
    | value of the cookie and the cookie will only be accessible through
    | the HTTP protocol. It's unlikely you should disable this option.
    |
    */

    'http_only' => env('SESSION_HTTP_ONLY', true),

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | This option determines how your cookies behave when cross-site requests
    | take place, and can be used to mitigate CSRF attacks. By default, we
    | will set this value to "lax" to permit secure cross-site requests.
    |
    | See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' => env('SESSION_SAME_SITE', 'lax'),

    /*
    |--------------------------------------------------------------------------
    | Partitioned Cookies
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will tie the cookie to the top-level site for
    | a cross-site context. Partitioned cookies are accepted by the browser
    | when flagged "secure" and the Same-Site attribute is set to "none".
    |
    */

    'partitioned' => env('SESSION_PARTITIONED_COOKIE', false),

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/filesystems.php ===

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Filesystem Disk
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default filesystem disk that should be used
    | by the framework. The "local" disk, as well as a variety of cloud
    | based disks are available to your application for file storage.
    |
    */

    'default' => env('FILESYSTEM_DISK', 'local'),

    /*
    |--------------------------------------------------------------------------
    | Filesystem Disks
    |--------------------------------------------------------------------------
    |
    | Below you may configure as many filesystem disks as necessary, and you
    | may even configure multiple disks for the same driver. Examples for
    | most supported storage drivers are configured here for reference.
    |
    | Supported drivers: "local", "ftp", "sftp", "s3"
    |
    */

    'disks' => [

        'local' => [
            'driver' => 'local',
            'root' => storage_path('app/private'),
            'serve' => true,
            'throw' => false,
        ],

        'public' => [
            'driver' => 'local',
            'root' => storage_path('app/public'),
            'url' => env('APP_URL').'/storage',
            'visibility' => 'public',
            'throw' => false,
        ],

        's3' => [
            'driver' => 's3',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION'),
            'bucket' => env('AWS_BUCKET'),
            'url' => env('AWS_URL'),
            'endpoint' => env('AWS_ENDPOINT'),
            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Symbolic Links
    |--------------------------------------------------------------------------
    |
    | Here you may configure the symbolic links that will be created when the
    | `storage:link` Artisan command is executed. The array keys should be
    | the locations of the links and the values should be their targets.
    |
    */

    'links' => [
        public_path('storage') => storage_path('app/public'),
    ],

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/cache.php ===

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Cache Store
    |--------------------------------------------------------------------------
    |
    | This option controls the default cache store that will be used by the
    | framework. This connection is utilized if another isn't explicitly
    | specified when running a cache operation inside the application.
    |
    */

    'default' => env('CACHE_STORE', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Cache Stores
    |--------------------------------------------------------------------------
    |
    | Here you may define all of the cache "stores" for your application as
    | well as their drivers. You may even define multiple stores for the
    | same cache driver to group types of items stored in your caches.
    |
    | Supported drivers: "array", "database", "file", "memcached",
    |                    "redis", "dynamodb", "octane", "null"
    |
    */

    'stores' => [

        'array' => [
            'driver' => 'array',
            'serialize' => false,
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_CACHE_CONNECTION'),
            'table' => env('DB_CACHE_TABLE', 'cache'),
            'lock_connection' => env('DB_CACHE_LOCK_CONNECTION'),
            'lock_table' => env('DB_CACHE_LOCK_TABLE'),
        ],

        'file' => [
            'driver' => 'file',
            'path' => storage_path('framework/cache/data'),
            'lock_path' => storage_path('framework/cache/data'),
        ],

        'memcached' => [
            'driver' => 'memcached',
            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
            'sasl' => [
                env('MEMCACHED_USERNAME'),
                env('MEMCACHED_PASSWORD'),
            ],
            'options' => [
                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
            ],
            'servers' => [
                [
                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
                    'port' => env('MEMCACHED_PORT', 11211),
                    'weight' => 100,
                ],
            ],
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_CACHE_CONNECTION', 'cache'),
            'lock_connection' => env('REDIS_CACHE_LOCK_CONNECTION', 'default'),
        ],

        'dynamodb' => [
            'driver' => 'dynamodb',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
            'endpoint' => env('DYNAMODB_ENDPOINT'),
        ],

        'octane' => [
            'driver' => 'octane',
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Key Prefix
    |--------------------------------------------------------------------------
    |
    | When utilizing the APC, database, memcached, Redis, and DynamoDB cache
    | stores, there might be other applications using the same cache. For
    | that reason, you may prefix every cache key to avoid collisions.
    |
    */

    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/services.php ===

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Third Party Services
    |--------------------------------------------------------------------------
    |
    | This file is for storing the credentials for third party services such
    | as Mailgun, Postmark, AWS and more. This file provides the de facto
    | location for this type of information, allowing packages to have
    | a conventional file to locate the various service credentials.
    |
    */

    'postmark' => [
        'token' => env('POSTMARK_TOKEN'),
    ],

    'ses' => [
        'key' => env('AWS_ACCESS_KEY_ID'),
        'secret' => env('AWS_SECRET_ACCESS_KEY'),
        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
    ],

    'resend' => [
        'key' => env('RESEND_KEY'),
    ],

    'slack' => [
        'notifications' => [
            'bot_user_oauth_token' => env('SLACK_BOT_USER_OAUTH_TOKEN'),
            'channel' => env('SLACK_BOT_USER_DEFAULT_CHANNEL'),
        ],
    ],

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/mail.php ===

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Mailer
    |--------------------------------------------------------------------------
    |
    | This option controls the default mailer that is used to send all email
    | messages unless another mailer is explicitly specified when sending
    | the message. All additional mailers can be configured within the
    | "mailers" array. Examples of each type of mailer are provided.
    |
    */

    'default' => env('MAIL_MAILER', 'log'),

    /*
    |--------------------------------------------------------------------------
    | Mailer Configurations
    |--------------------------------------------------------------------------
    |
    | Here you may configure all of the mailers used by your application plus
    | their respective settings. Several examples have been configured for
    | you and you are free to add your own as your application requires.
    |
    | Laravel supports a variety of mail "transport" drivers that can be used
    | when delivering an email. You may specify which one you're using for
    | your mailers below. You may also add additional mailers if needed.
    |
    | Supported: "smtp", "sendmail", "mailgun", "ses", "ses-v2",
    |            "postmark", "resend", "log", "array",
    |            "failover", "roundrobin"
    |
    */

    'mailers' => [

        'smtp' => [
            'transport' => 'smtp',
            'url' => env('MAIL_URL'),
            'host' => env('MAIL_HOST', '127.0.0.1'),
            'port' => env('MAIL_PORT', 2525),
            'encryption' => env('MAIL_ENCRYPTION', 'tls'),
            'username' => env('MAIL_USERNAME'),
            'password' => env('MAIL_PASSWORD'),
            'timeout' => null,
            'local_domain' => env('MAIL_EHLO_DOMAIN', parse_url(env('APP_URL', 'http://localhost'), PHP_URL_HOST)),
        ],

        'ses' => [
            'transport' => 'ses',
        ],

        'postmark' => [
            'transport' => 'postmark',
            // 'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),
            // 'client' => [
            //     'timeout' => 5,
            // ],
        ],

        'resend' => [
            'transport' => 'resend',
        ],

        'sendmail' => [
            'transport' => 'sendmail',
            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
        ],

        'log' => [
            'transport' => 'log',
            'channel' => env('MAIL_LOG_CHANNEL'),
        ],

        'array' => [
            'transport' => 'array',
        ],

        'failover' => [
            'transport' => 'failover',
            'mailers' => [
                'smtp',
                'log',
            ],
        ],

        'roundrobin' => [
            'transport' => 'roundrobin',
            'mailers' => [
                'ses',
                'postmark',
            ],
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Global "From" Address
    |--------------------------------------------------------------------------
    |
    | You may wish for all emails sent by your application to be sent from
    | the same address. Here you may specify a name and address that is
    | used globally for all emails that are sent by your application.
    |
    */

    'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
        'name' => env('MAIL_FROM_NAME', 'Example'),
    ],

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/database.php ===

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Database Connection Name
    |--------------------------------------------------------------------------
    |
    | Here you may specify which of the database connections below you wish
    | to use as your default connection for database operations. This is
    | the connection which will be utilized unless another connection
    | is explicitly specified when you execute a query / statement.
    |
    */

    'default' => env('DB_CONNECTION', 'sqlite'),

    /*
    |--------------------------------------------------------------------------
    | Database Connections
    |--------------------------------------------------------------------------
    |
    | Below are all of the database connections defined for your application.
    | An example configuration is provided for each database system which
    | is supported by Laravel. You're free to add / remove connections.
    |
    */

    'connections' => [

        'sqlite' => [
            'driver' => 'sqlite',
            'url' => env('DB_URL'),
            'database' => env('DB_DATABASE', database_path('database.sqlite')),
            'prefix' => '',
            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),
            'busy_timeout' => null,
            'journal_mode' => null,
            'synchronous' => null,
        ],

        'mysql' => [
            'driver' => 'mysql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'mariadb' => [
            'driver' => 'mariadb',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'pgsql' => [
            'driver' => 'pgsql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '5432'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            'search_path' => 'public',
            'sslmode' => 'prefer',
        ],

        'sqlsrv' => [
            'driver' => 'sqlsrv',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', 'localhost'),
            'port' => env('DB_PORT', '1433'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            // 'encrypt' => env('DB_ENCRYPT', 'yes'),
            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Migration Repository Table
    |--------------------------------------------------------------------------
    |
    | This table keeps track of all the migrations that have already run for
    | your application. Using this information, we can determine which of
    | the migrations on disk haven't actually been run on the database.
    |
    */

    'migrations' => [
        'table' => 'migrations',
        'update_date_on_publish' => true,
    ],

    /*
    |--------------------------------------------------------------------------
    | Redis Databases
    |--------------------------------------------------------------------------
    |
    | Redis is an open source, fast, and advanced key-value store that also
    | provides a richer body of commands than a typical key-value system
    | such as Memcached. You may define your connection settings here.
    |
    */

    'redis' => [

        'client' => env('REDIS_CLIENT', 'phpredis'),

        'options' => [
            'cluster' => env('REDIS_CLUSTER', 'redis'),
            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
        ],

        'default' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_DB', '0'),
        ],

        'cache' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_CACHE_DB', '1'),
        ],

    ],

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/auth.php ===

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | This option defines the default authentication "guard" and password
    | reset "broker" for your application. You may change these values
    | as required, but they're a perfect start for most applications.
    |
    */

    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | Next, you may define every authentication guard for your application.
    | Of course, a great default configuration has been defined for you
    | which utilizes session storage plus the Eloquent user provider.
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | Supported: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | If you have multiple user tables or models you may configure multiple
    | providers to represent the model / table. These providers may then
    | be assigned to any extra authentication guards you have defined.
    |
    | Supported: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\User::class),
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    |
    | These configuration options specify the behavior of Laravel's password
    | reset functionality, including the table utilized for token storage
    | and the user provider that is invoked to actually retrieve users.
    |
    | The expiry time is the number of minutes that each reset token will be
    | considered valid. This security feature keeps tokens short-lived so
    | they have less time to be guessed. You may change this as needed.
    |
    | The throttle setting is the number of seconds a user must wait before
    | generating more password reset tokens. This prevents the user from
    | quickly generating a very large amount of password reset tokens.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Here you may define the amount of seconds before a password confirmation
    | window expires and users are asked to re-enter their password via the
    | confirmation screen. By default, the timeout lasts for three hours.
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/logging.php ===

<?php

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Log Channel
    |--------------------------------------------------------------------------
    |
    | This option defines the default log channel that is utilized to write
    | messages to your logs. The value provided here should match one of
    | the channels present in the list of "channels" configured below.
    |
    */

    'default' => env('LOG_CHANNEL', 'stack'),

    /*
    |--------------------------------------------------------------------------
    | Deprecations Log Channel
    |--------------------------------------------------------------------------
    |
    | This option controls the log channel that should be used to log warnings
    | regarding deprecated PHP and library features. This allows you to get
    | your application ready for upcoming major versions of dependencies.
    |
    */

    'deprecations' => [
        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
        'trace' => env('LOG_DEPRECATIONS_TRACE', false),
    ],

    /*
    |--------------------------------------------------------------------------
    | Log Channels
    |--------------------------------------------------------------------------
    |
    | Here you may configure the log channels for your application. Laravel
    | utilizes the Monolog PHP logging library, which includes a variety
    | of powerful log handlers and formatters that you're free to use.
    |
    | Available drivers: "single", "daily", "slack", "syslog",
    |                    "errorlog", "monolog", "custom", "stack"
    |
    */

    'channels' => [

        'stack' => [
            'driver' => 'stack',
            'channels' => explode(',', env('LOG_STACK', 'single')),
            'ignore_exceptions' => false,
        ],

        'single' => [
            'driver' => 'single',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'daily' => [
            'driver' => 'daily',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'days' => env('LOG_DAILY_DAYS', 14),
            'replace_placeholders' => true,
        ],

        'slack' => [
            'driver' => 'slack',
            'url' => env('LOG_SLACK_WEBHOOK_URL'),
            'username' => env('LOG_SLACK_USERNAME', 'Laravel Log'),
            'emoji' => env('LOG_SLACK_EMOJI', ':boom:'),
            'level' => env('LOG_LEVEL', 'critical'),
            'replace_placeholders' => true,
        ],

        'papertrail' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
            'handler_with' => [
                'host' => env('PAPERTRAIL_URL'),
                'port' => env('PAPERTRAIL_PORT'),
                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'stderr' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => StreamHandler::class,
            'formatter' => env('LOG_STDERR_FORMATTER'),
            'with' => [
                'stream' => 'php://stderr',
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'syslog' => [
            'driver' => 'syslog',
            'level' => env('LOG_LEVEL', 'debug'),
            'facility' => env('LOG_SYSLOG_FACILITY', LOG_USER),
            'replace_placeholders' => true,
        ],

        'errorlog' => [
            'driver' => 'errorlog',
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'null' => [
            'driver' => 'monolog',
            'handler' => NullHandler::class,
        ],

        'emergency' => [
            'path' => storage_path('logs/laravel.log'),
        ],

    ],

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/queue.php ===

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Queue Connection Name
    |--------------------------------------------------------------------------
    |
    | Laravel's queue supports a variety of backends via a single, unified
    | API, giving you convenient access to each backend using identical
    | syntax for each. The default queue connection is defined below.
    |
    */

    'default' => env('QUEUE_CONNECTION', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    |
    | Here you may configure the connection options for every queue backend
    | used by your application. An example configuration is provided for
    | each backend supported by Laravel. You're also free to add more.
    |
    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
    |
    */

    'connections' => [

        'sync' => [
            'driver' => 'sync',
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_QUEUE_CONNECTION'),
            'table' => env('DB_QUEUE_TABLE', 'jobs'),
            'queue' => env('DB_QUEUE', 'default'),
            'retry_after' => (int) env('DB_QUEUE_RETRY_AFTER', 90),
            'after_commit' => false,
        ],

        'beanstalkd' => [
            'driver' => 'beanstalkd',
            'host' => env('BEANSTALKD_QUEUE_HOST', 'localhost'),
            'queue' => env('BEANSTALKD_QUEUE', 'default'),
            'retry_after' => (int) env('BEANSTALKD_QUEUE_RETRY_AFTER', 90),
            'block_for' => 0,
            'after_commit' => false,
        ],

        'sqs' => [
            'driver' => 'sqs',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
            'queue' => env('SQS_QUEUE', 'default'),
            'suffix' => env('SQS_SUFFIX'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'after_commit' => false,
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_QUEUE_CONNECTION', 'default'),
            'queue' => env('REDIS_QUEUE', 'default'),
            'retry_after' => (int) env('REDIS_QUEUE_RETRY_AFTER', 90),
            'block_for' => null,
            'after_commit' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Job Batching
    |--------------------------------------------------------------------------
    |
    | The following options configure the database and table that store job
    | batching information. These options can be updated to any database
    | connection and table which has been defined by your application.
    |
    */

    'batching' => [
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'job_batches',
    ],

    /*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    |
    | These options configure the behavior of failed queue job logging so you
    | can control how and where failed jobs are stored. Laravel ships with
    | support for storing failed jobs in a simple file or in a database.
    |
    | Supported drivers: "database-uuids", "dynamodb", "file", "null"
    |
    */

    'failed' => [
        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'failed_jobs',
    ],

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/config/app.php ===

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Application Name
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application, which will be used when the
    | framework needs to place the application's name in a notification or
    | other UI elements where an application name needs to be displayed.
    |
    */

    'name' => env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | Application Environment
    |--------------------------------------------------------------------------
    |
    | This value determines the "environment" your application is currently
    | running in. This may determine how you prefer to configure various
    | services the application utilizes. Set this in your ".env" file.
    |
    */

    'env' => env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | Application Debug Mode
    |--------------------------------------------------------------------------
    |
    | When your application is in debug mode, detailed error messages with
    | stack traces will be shown on every error that occurs within your
    | application. If disabled, a simple generic error page is shown.
    |
    */

    'debug' => (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | Application URL
    |--------------------------------------------------------------------------
    |
    | This URL is used by the console to properly generate URLs when using
    | the Artisan command line tool. You should set this to the root of
    | the application so that it's available within Artisan commands.
    |
    */

    'url' => env('APP_URL', 'http://localhost'),

    /*
    |--------------------------------------------------------------------------
    | Application Timezone
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default timezone for your application, which
    | will be used by the PHP date and date-time functions. The timezone
    | is set to "UTC" by default as it is suitable for most use cases.
    |
    */

    'timezone' => env('APP_TIMEZONE', 'UTC'),

    /*
    |--------------------------------------------------------------------------
    | Application Locale Configuration
    |--------------------------------------------------------------------------
    |
    | The application locale determines the default locale that will be used
    | by Laravel's translation / localization methods. This option can be
    | set to any locale for which you plan to have translation strings.
    |
    */

    'locale' => env('APP_LOCALE', 'en'),

    'fallback_locale' => env('APP_FALLBACK_LOCALE', 'en'),

    'faker_locale' => env('APP_FAKER_LOCALE', 'en_US'),

    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | This key is utilized by Laravel's encryption services and should be set
    | to a random, 32 character string to ensure that all encrypted values
    | are secure. You should do this prior to deploying the application.
    |
    */

    'cipher' => 'AES-256-CBC',

    'key' => env('APP_KEY'),

    'previous_keys' => [
        ...array_filter(
            explode(',', env('APP_PREVIOUS_KEYS', ''))
        ),
    ],

    /*
    |--------------------------------------------------------------------------
    | Maintenance Mode Driver
    |--------------------------------------------------------------------------
    |
    | These configuration options determine the driver used to determine and
    | manage Laravel's "maintenance mode" status. The "cache" driver will
    | allow maintenance mode to be controlled across multiple machines.
    |
    | Supported drivers: "file", "cache"
    |
    */

    'maintenance' => [
        'driver' => env('APP_MAINTENANCE_DRIVER', 'file'),
        'store' => env('APP_MAINTENANCE_STORE', 'database'),
    ],

];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/bootstrap/cache/services.php ===

<?php return array (
  'providers' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    2 => 'Illuminate\\Bus\\BusServiceProvider',
    3 => 'Illuminate\\Cache\\CacheServiceProvider',
    4 => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    5 => 'Illuminate\\Concurrency\\ConcurrencyServiceProvider',
    6 => 'Illuminate\\Cookie\\CookieServiceProvider',
    7 => 'Illuminate\\Database\\DatabaseServiceProvider',
    8 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    9 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    10 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    11 => 'Illuminate\\Hashing\\HashServiceProvider',
    12 => 'Illuminate\\Mail\\MailServiceProvider',
    13 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    14 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    15 => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    16 => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    17 => 'Illuminate\\Queue\\QueueServiceProvider',
    18 => 'Illuminate\\Redis\\RedisServiceProvider',
    19 => 'Illuminate\\Session\\SessionServiceProvider',
    20 => 'Illuminate\\Translation\\TranslationServiceProvider',
    21 => 'Illuminate\\Validation\\ValidationServiceProvider',
    22 => 'Illuminate\\View\\ViewServiceProvider',
    23 => 'Inertia\\ServiceProvider',
    24 => 'Laravel\\Breeze\\BreezeServiceProvider',
    25 => 'Laravel\\Sail\\SailServiceProvider',
    26 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    27 => 'Laravel\\Tinker\\TinkerServiceProvider',
    28 => 'Carbon\\Laravel\\ServiceProvider',
    29 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    30 => 'Termwind\\Laravel\\TermwindServiceProvider',
    31 => 'Tighten\\Ziggy\\ZiggyServiceProvider',
    32 => 'App\\Providers\\AppServiceProvider',
  ),
  'eager' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Cookie\\CookieServiceProvider',
    2 => 'Illuminate\\Database\\DatabaseServiceProvider',
    3 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    4 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    5 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    6 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    7 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    8 => 'Illuminate\\Session\\SessionServiceProvider',
    9 => 'Illuminate\\View\\ViewServiceProvider',
    10 => 'Inertia\\ServiceProvider',
    11 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    12 => 'Carbon\\Laravel\\ServiceProvider',
    13 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    14 => 'Termwind\\Laravel\\TermwindServiceProvider',
    15 => 'Tighten\\Ziggy\\ZiggyServiceProvider',
    16 => 'App\\Providers\\AppServiceProvider',
  ),
  'deferred' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastManager' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Factory' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Broadcaster' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\QueueingDispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\BatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\DatabaseBatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'cache' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.store' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.psr6' => 'Illuminate\\Cache\\CacheServiceProvider',
    'memcached.connector' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Cache\\RateLimiter' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Foundation\\Console\\AboutCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ForgetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClearCompiledCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Auth\\Console\\ClearResetsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DbCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\PruneCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\WipeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DownCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Concurrency\\Console\\InvokeSerializedClosureCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\KeyGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PackageDiscoverCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\PruneStaleTagsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FlushFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ForgetFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListenCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneBatchesCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneFailedJobsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RestartCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryBatchCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\WorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DumpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleFinishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleRunCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleClearCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleTestCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleWorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleInterruptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowModelCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageLinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageUnlinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\UpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ApiInstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\BroadcastingInstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\CacheTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\CastMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClassMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ComponentMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConsoleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\ControllerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DocsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnumMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ExceptionMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\InterfaceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\LangPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ListenerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\MailMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\MiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ModelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\NotificationMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Notifications\\Console\\NotificationTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ObserverMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PolicyMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ProviderMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FailedTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\BatchesTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RequestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ResourceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RuleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ScopeMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Session\\Console\\SessionTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ServeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StubPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TraitMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\VendorPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migrator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.repository' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.creator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\FreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\InstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RefreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\ResetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RollbackCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\StatusCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'composer' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Concurrency\\ConcurrencyManager' => 'Illuminate\\Concurrency\\ConcurrencyServiceProvider',
    'hash' => 'Illuminate\\Hashing\\HashServiceProvider',
    'hash.driver' => 'Illuminate\\Hashing\\HashServiceProvider',
    'mail.manager' => 'Illuminate\\Mail\\MailServiceProvider',
    'mailer' => 'Illuminate\\Mail\\MailServiceProvider',
    'Illuminate\\Mail\\Markdown' => 'Illuminate\\Mail\\MailServiceProvider',
    'auth.password' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'auth.password.broker' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'Illuminate\\Contracts\\Pipeline\\Hub' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'pipeline' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'queue' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.connection' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.failer' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.listener' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.worker' => 'Illuminate\\Queue\\QueueServiceProvider',
    'redis' => 'Illuminate\\Redis\\RedisServiceProvider',
    'redis.connection' => 'Illuminate\\Redis\\RedisServiceProvider',
    'translator' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'translation.loader' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'validator' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'validation.presence' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Illuminate\\Contracts\\Validation\\UncompromisedVerifier' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Laravel\\Breeze\\Console\\InstallCommand' => 'Laravel\\Breeze\\BreezeServiceProvider',
    'Laravel\\Sail\\Console\\InstallCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'Laravel\\Sail\\Console\\PublishCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'command.tinker' => 'Laravel\\Tinker\\TinkerServiceProvider',
  ),
  'when' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastServiceProvider' => 
    array (
    ),
    'Illuminate\\Bus\\BusServiceProvider' => 
    array (
    ),
    'Illuminate\\Cache\\CacheServiceProvider' => 
    array (
    ),
    'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider' => 
    array (
    ),
    'Illuminate\\Concurrency\\ConcurrencyServiceProvider' => 
    array (
    ),
    'Illuminate\\Hashing\\HashServiceProvider' => 
    array (
    ),
    'Illuminate\\Mail\\MailServiceProvider' => 
    array (
    ),
    'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider' => 
    array (
    ),
    'Illuminate\\Pipeline\\PipelineServiceProvider' => 
    array (
    ),
    'Illuminate\\Queue\\QueueServiceProvider' => 
    array (
    ),
    'Illuminate\\Redis\\RedisServiceProvider' => 
    array (
    ),
    'Illuminate\\Translation\\TranslationServiceProvider' => 
    array (
    ),
    'Illuminate\\Validation\\ValidationServiceProvider' => 
    array (
    ),
    'Laravel\\Breeze\\BreezeServiceProvider' => 
    array (
    ),
    'Laravel\\Sail\\SailServiceProvider' => 
    array (
    ),
    'Laravel\\Tinker\\TinkerServiceProvider' => 
    array (
    ),
  ),
);
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/bootstrap/cache/packages.php ===

<?php return array (
  'inertiajs/inertia-laravel' => 
  array (
    'providers' => 
    array (
      0 => 'Inertia\\ServiceProvider',
    ),
  ),
  'laravel/breeze' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Breeze\\BreezeServiceProvider',
    ),
  ),
  'laravel/sail' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sail\\SailServiceProvider',
    ),
  ),
  'laravel/sanctum' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    ),
  ),
  'laravel/tinker' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Tinker\\TinkerServiceProvider',
    ),
  ),
  'nesbot/carbon' => 
  array (
    'providers' => 
    array (
      0 => 'Carbon\\Laravel\\ServiceProvider',
    ),
  ),
  'nunomaduro/collision' => 
  array (
    'providers' => 
    array (
      0 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    ),
  ),
  'nunomaduro/termwind' => 
  array (
    'providers' => 
    array (
      0 => 'Termwind\\Laravel\\TermwindServiceProvider',
    ),
  ),
  'tightenco/ziggy' => 
  array (
    'providers' => 
    array (
      0 => 'Tighten\\Ziggy\\ZiggyServiceProvider',
    ),
  ),
);
=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/bootstrap/providers.php ===

<?php

return [
    App\Providers\AppServiceProvider::class,
];

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/bootstrap/app.php ===

<?php

use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware) {
        $middleware->web(append: [
            \App\Http\Middleware\HandleInertiaRequests::class,
            \Illuminate\Http\Middleware\AddLinkHeadersForPreloadedAssets::class,
        ]);

        //
    })
    ->withExceptions(function (Exceptions $exceptions) {
        //
    })->create();

=== /home/ascianhk/Descargas/2-Daw/Proyectos/Penyes-app/vite.config.js ===

import { defineConfig } from 'vite';
import laravel from 'laravel-vite-plugin';
import react from '@vitejs/plugin-react';

export default defineConfig({
    plugins: [
        laravel({
            input: ['resources/js/app.jsx', 'resources/css/app.css'],
            refresh: true,
        }),
        react(),
    ],
});